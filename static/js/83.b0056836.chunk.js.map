{"version":3,"sources":["screens/signUpCompany.js","screens/company/signUpScreen.js"],"names":["SignUpScreenCompany","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signUpLoadingButton","state","phase","react_default","a","createElement","Button","color","block","disabled","class","role","aria-hidden","handleChange","event","target","value","type","checked","name","console","log","setState","defineProperty","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","errors","wrap","_context","prev","next","preventDefault","length","alert","join","signUpUserCompany","history","push","userCreateSuccess","t0","userCreateFailed","stop","_x","apply","arguments","company_name","company_email","company_phone","company_type","_this2","isAuthenticated","Redirect","to","concat","redirectTo","split","className","Container","Row","Col","md","lg","xl","Card","CardBody","Form","InputGroup","InputGroupAddon","addonType","InputGroupText","placeholder","onChange","required","htmlFor","id","selected","password","confPass","CardFooter","Component","connect","auth","authenticated","navigation","dispatch","signInAction","username","signIn","__webpack_exports__","signUpCompany"],"mappings":"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","file":"static/js/83.b0056836.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    Col,\n    Container,\n    Form,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from 'reactstrap';\n\nimport { isUsernameAvailable, signUpUserCompany, signUpUserShipper, signUpUserSupplier } from \"../helpers/api\";\nimport history from '../history';\nimport { userCreateSuccess, userCreateFailed } from '../helpers/notifications';\nimport { signIn } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport Redirect from \"react-router/es/Redirect\";\n\n// const NAME_REGEX = '^[A-Z a-z]';\nconst USERNAME_REGEX = '^[\\\\w.@+-]+$';\n\n// const PASSWORD_REGEX = '^.{6}.+$';\n\nclass SignUpScreenCompany extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            company_name: '',\n            company_email: '',\n            company_phone: '',\n            company_type: '',\n            phase: 0,\n        };\n    }\n\n\n    signUpLoadingButton = () => {\n        if (this.state.phase === 1) {\n            return (\n                <Button color=\"success\" block disabled>\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Loading\n                </Button>\n            );\n        }\n\n        return <Button color=\"success\" block>Create Account</Button>;\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        console.log(event, target, name, value);\n\n        this.setState({\n            [name]: value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        this.setState({ phase: 1 })\n        console.log(this.state);\n\n        let errors = [];\n        // if (!this.state.username.match(USERNAME_REGEX))\n        //     errors.push('Username not valid');\n\n        // else {\n        //     const data = await isUsernameAvailable(this.state.username);\n        //     if (!data.available)\n        //         errors.push(`Username '${data.username}' not available`);\n        // }\n        if (errors.length !== 0)\n            alert(errors.join('\\n'));\n        else {\n            if (this.props.type === \"Company\") {\n                try {\n                    console.log(this.state, 'gatate')\n                    await signUpUserCompany(this.state);\n                    this.setState({ phase: 0 })\n                    history.push(\"/\");\n                    userCreateSuccess(\"Company\");\n                    //alert('User created successful');\n                    // this.props.signInAction(this.state.username, this.state.password)\n                } catch (e) {\n                    userCreateFailed();\n                    console.log(e)\n                }\n            }\n        }\n        this.setState({ phase: 0 })\n    };\n\n\n    render() {\n        if (this.props.isAuthenticated)\n            return <Redirect to={`${this.props.redirectTo.split('#')[1]}`} />;\n\n\n        return (\n\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\n                            <Card className=\"mx-4\">\n                                <CardBody className=\"p-4\">\n                                    <Form onSubmit={this.onSubmit}>\n                                        <input type=\"hidden\" className={\"form-control\"} name=\"user-type\"\n                                            value={this.props.type} />\n                                        <h1>Register {this.props.type}</h1>\n                                        <p className=\"text-muted\">Create your account</p>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-user\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input placeholder={'Name'} type=\"text\" className={\"form-control\"}\n                                                name={\"company_name\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.company_name} required />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>@</InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"email\" placeholder={'Email'} name={\"company_email\"}\n                                                className={\"form-control\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.company_email} required />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"phone\" placeholder={'Phone'}\n                                                name={\"company_phone\"}\n                                                className={\"form-control\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.company_phone} required />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <div className=\"input-group-prepend\">\n                                                <label className=\"input-group-text\"\n                                                    htmlFor=\"inputGroupSelect01\">Company</label>\n                                            </div>\n                                            <select onChange={(e) => {\n                                                this.setState({ company_type: e.target.value })\n                                            }} className=\"custom-select\" id=\"inputGroupSelect01\">\n                                                <option value={''} selected>Choose...</option>\n                                                <option value={'supplier'} selected>Supplier</option>\n                                                <option value={'shipper'}>Shipper</option>\n                                            </select>\n                                        </InputGroup>\n\n                                        {this.state.password !== this.state.confPass ? \"Password and confirm password should be same\" : \"\"}\n                                        <br />\n                                        <br />\n                                        {this.signUpLoadingButton()}\n                                    </Form>\n                                </CardBody>\n                                <CardFooter className=\"p-4\">\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.authenticated,\n    redirectTo: state.navigation.redirectTo\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    signInAction: (username, password) => dispatch(signIn(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreenCompany);\n","import React from \"react\";\nimport SignUpScreen from \"../signUpCompany\";\n\nexport default () => (\n    <SignUpScreen type={'Company'}/>\n)\n"],"sourceRoot":""}