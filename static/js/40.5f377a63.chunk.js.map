{"version":3,"sources":["screens/supplier/forms/invoiceForm.js"],"names":["InvoiceForm","props","_useState","useState","invoice_quiz","customer_name_id","invoice_number","invoice_date","invoice_due_date","place_of_supply","service_month","invoice_transactions","company_notes","terms_and_conditions","_useState2","Object","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","form","setForm","_useState3","invoice_transaction_desc","invoice_transaction_lr","invoice_transaction_vehicle","invoice_transaction_date","invoice_transaction_qty","invoice_transaction_rate","invoice_transaction_gst","invoice_transaction_amount","_useState4","itemsForm","setItemsForm","useEffect","match","params","id","_ref","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","mark","_callee","invoiceData","wrap","_context","prev","next","fetchSupplierInvoice","sent","customer_name","stop","apply","this","arguments","fetchInvoiceData","_useState5","_useState6","customers","setCustomers","_useState7","_useState8","items","setItems","getCustomersData","_ref2","_callee2","data","_context2","fetchMasterCustomers","getItemsData","_ref3","_callee3","_context3","fetchMasterItems","_useState9","_useState10","phase","setPhase","renderCustomerOptions","useCallback","length","map","o","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","key","value","primary_contact","company_name","renderCustomerInput","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","type","concat","get_shipper","shipper_fname","shipper_lname","disabled","htmlFor","name","onChange","handleInputChange","required","defaultValue","renderItemsOptions","event","target","checked","_objectSpread","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleItemsInputChange","calculateItemAmount","q","r","g","parseFloat","addItem","_callee4","amount","_context4","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","deleteItem","_ref5","_callee5","i","_context5","filter","e","cp_name","_x","renderItemsList","idx","reactstrap__WEBPACK_IMPORTED_MODULE_9__","title","onClick","color","size","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_17__","icon","faMinus","btnLoader","class","role","aria-hidden","handleSubmit","_ref6","_callee6","_context6","preventDefault","console","log","editSupplierInvoice","toast","success","createSupplierInvoice","history","push","t0","error","_x2","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","method","onSubmit","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","md","reactstrap__WEBPACK_IMPORTED_MODULE_16__","striped","responsive","placeholder","bsSize","faPlus","react_router_dom__WEBPACK_IMPORTED_MODULE_19__","to"],"mappings":"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","file":"static/js/40.5f377a63.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport {\r\n    Card, CardHeader, CardBody,\r\n    Form, FormGroup,\r\n    Row, Col,\r\n    TabContent, TabPane, Nav, NavItem, NavLink,\r\n    Label, Input, Button, Alert, Table,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { createSupplierInvoice, fetchSupplierInvoice, editSupplierInvoice, fetchMasterCustomers, fetchMasterItems } from '../../../helpers/api';\r\nimport { toast } from 'react-toastify';\r\nimport history from '../../../history';\r\n\r\n\r\nconst InvoiceForm = props => {\r\n\r\n    const [form, setForm] = useState({\r\n        invoice_quiz: '',\r\n        customer_name_id: '',\r\n        invoice_number: '',\r\n        invoice_date: '',\r\n        invoice_due_date: '',\r\n\r\n        place_of_supply: '',\r\n        service_month: '',\r\n\r\n        invoice_transactions: [],\r\n\r\n        company_notes: '',\r\n        terms_and_conditions: '',\r\n    })\r\n\r\n    const [itemsForm, setItemsForm] = useState({\r\n        invoice_transaction_desc: '',\r\n        invoice_transaction_lr: '',\r\n        invoice_transaction_vehicle: '',\r\n        invoice_transaction_date: '',\r\n        invoice_transaction_qty: 0,\r\n        invoice_transaction_rate: 0,\r\n        invoice_transaction_gst: 0,\r\n        invoice_transaction_amount: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id) {\r\n            const fetchInvoiceData = async () => {\r\n                const invoiceData = await fetchSupplierInvoice(props.match.params.id);\r\n                if (invoiceData.customer_name) {\r\n                    setForm({\r\n                        invoice_quiz: invoiceData.invoice_quiz,\r\n                        customer_name_id: invoiceData.customer_name.id,\r\n                        invoice_number: invoiceData.invoice_number,\r\n                        invoice_date: invoiceData.invoice_date,\r\n                        invoice_due_date: invoiceData.invoice_due_date,\r\n                        place_of_supply: invoiceData.place_of_supply,\r\n                        service_month: invoiceData.service_month,\r\n                        invoice_transactions: invoiceData.invoice_transactions,\r\n                        company_notes: invoiceData.company_notes,\r\n                        terms_and_conditions: invoiceData.terms_and_conditions,\r\n                    });\r\n                } else if (invoiceData.invoice_quiz) {\r\n                    setForm({\r\n                        invoice_quiz: invoiceData.invoice_quiz,\r\n                        customer_name_id: invoiceData.customer_name,\r\n                        invoice_number: invoiceData.invoice_number,\r\n                        invoice_date: invoiceData.invoice_date,\r\n                        invoice_due_date: invoiceData.invoice_due_date,\r\n                        place_of_supply: invoiceData.place_of_supply,\r\n                        service_month: invoiceData.service_month,\r\n                        invoice_transactions: invoiceData.invoice_transactions,\r\n                        company_notes: invoiceData.company_notes,\r\n                        terms_and_conditions: invoiceData.terms_and_conditions,\r\n                    });\r\n                }\r\n            }\r\n            fetchInvoiceData();\r\n        }\r\n    }, [])\r\n\r\n    const [customers, setCustomers] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCustomersData = async () => {\r\n            const data = await fetchMasterCustomers();\r\n            setCustomers(data);\r\n        }\r\n        const getItemsData = async () => {\r\n            const data = await fetchMasterItems();\r\n            setItems(data);\r\n        }\r\n        getCustomersData();\r\n        getItemsData();\r\n    }, [])\r\n\r\n    const [phase, setPhase] = useState(0);\r\n\r\n    const renderCustomerOptions = useCallback(\r\n        data => {\r\n            if (data.length > 0) {\r\n                return data.map(o => {\r\n                    return <option key={o.id} value={o.id}>{o.primary_contact} | {o.company_name}</option>;\r\n                });\r\n            }\r\n        },\r\n        []\r\n    )\r\n\r\n    const renderCustomerInput = useCallback(\r\n        () => {\r\n            if (form.invoice_quiz) {\r\n                return (\r\n                    <FormGroup>\r\n                        <Label>Customer Name*</Label>\r\n                        <Input type=\"text\" value={`${form.invoice_quiz.get_shipper.shipper_fname} ${form.invoice_quiz.get_shipper.shipper_lname}`} disabled />\r\n                    </FormGroup>\r\n                );\r\n            } else {\r\n                return (\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"customer_name_id\">Customer Name*</Label>\r\n                        <Input type=\"select\" name=\"customer_name_id\" id=\"customer_name_id\" value={form.customer_name_id}\r\n                            onChange={handleInputChange} required>\r\n                            <option value={\"\"} defaultValue>Select Customer</option>\r\n                            {renderCustomerOptions(customers)}\r\n                        </Input>\r\n                    </FormGroup>\r\n                );\r\n            }\r\n        },\r\n        [form,]\r\n    )\r\n\r\n    const renderItemsOptions = useCallback(\r\n        data => {\r\n            if (data.length > 0) {\r\n                return data.map(o => {\r\n                    return <option key={o.id} value={`${o.name} | ${o.type}`}>{o.name} | {o.type}</option>;\r\n                });\r\n            }\r\n        },\r\n        []\r\n    )\r\n\r\n    const handleInputChange = useCallback(\r\n        event => {\r\n            const target = event.target;\r\n            const value = target.type === 'checkbox' ? target.checked : target.value;\r\n            const name = target.name;\r\n\r\n            setForm({\r\n                ...form,\r\n                [name]: value\r\n            });\r\n        },\r\n        [form, setForm]\r\n    )\r\n\r\n    const handleItemsInputChange = useCallback(\r\n        event => {\r\n            const target = event.target;\r\n            const value = target.type === 'checkbox' ? target.checked : target.value;\r\n            const name = target.name;\r\n\r\n            setItemsForm({\r\n                ...itemsForm,\r\n                [name]: value,\r\n            });\r\n        },\r\n        [itemsForm, setItemsForm]\r\n    )\r\n\r\n    const calculateItemAmount = useCallback(\r\n        (q, r, g) => {\r\n            return parseFloat(q) * parseFloat(r) + parseFloat(g);\r\n        },\r\n        [parseFloat]\r\n    )\r\n\r\n    const addItem = useCallback(\r\n        async () => {\r\n            const amount = calculateItemAmount(itemsForm.invoice_transaction_qty, itemsForm.invoice_transaction_rate, itemsForm.invoice_transaction_gst);\r\n            setForm({ ...form, invoice_transactions: [...form.invoice_transactions, { ...itemsForm, invoice_transaction_amount: amount }] });\r\n            setItemsForm({\r\n                invoice_transaction_desc: '',\r\n                invoice_transaction_lr: 0,\r\n                invoice_transaction_vehicle: '',\r\n                invoice_transaction_date: '',\r\n                invoice_transaction_qty: 0,\r\n                invoice_transaction_rate: 0,\r\n                invoice_transaction_gst: 0,\r\n                invoice_transaction_amount: 0,\r\n            });\r\n        },\r\n        [form, setForm, itemsForm, setItemsForm]\r\n    )\r\n\r\n    const deleteItem = useCallback(\r\n        async i => {\r\n            if (\"id\" in i) {\r\n                setForm({ ...form, invoice_transactions: form.invoice_transactions.filter(e => e.id !== i.id) });\r\n            } else {\r\n                setForm({ ...form, invoice_transactions: form.invoice_transactions.filter(e => e.cp_name !== i.cp_name) });\r\n            }\r\n        },\r\n        [form, setForm]\r\n    )\r\n\r\n    const renderItemsList = useCallback(\r\n        () => {\r\n            if (form.invoice_transactions) {\r\n                return form.invoice_transactions.map((i, idx) => {\r\n                    return (\r\n                        <tr key={idx}>\r\n                            <td>{i.invoice_transaction_desc}</td>\r\n                            <td>{i.invoice_transaction_lr}</td>\r\n                            <td>{i.invoice_transaction_vehicle}</td>\r\n                            <td>{i.invoice_transaction_date}</td>\r\n                            <td>{i.invoice_transaction_qty}</td>\r\n                            <td>{i.invoice_transaction_rate}</td>\r\n                            <td>{i.invoice_transaction_gst}</td>\r\n                            <td>{i.invoice_transaction_amount}</td>\r\n                            <td>\r\n                                <Button type=\"button\" title=\"Delete Item\" onClick={() => deleteItem(i)} color=\"danger\" size=\"sm\">\r\n                                    <FontAwesomeIcon icon={faMinus} />\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })\r\n            }\r\n        },\r\n        [form]\r\n    )\r\n\r\n    const btnLoader = useCallback(\r\n        () => {\r\n            if (phase === 1) {\r\n                return (\r\n                    <Button color=\"primary\" size=\"lg\" disabled>\r\n                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving\r\n                    </Button>\r\n                )\r\n            }\r\n            return <Button type=\"submit\" color=\"primary\" size=\"lg\">Save</Button>\r\n        },\r\n        [phase]\r\n    )\r\n\r\n    const handleSubmit = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            setPhase(1);\r\n            console.log(form)\r\n            try {\r\n                if (props.match.params.id) {\r\n                    await editSupplierInvoice(props.match.params.id, form);\r\n                    setPhase(0);\r\n                    toast.success('Invoice Updated Successfully');\r\n                } else {\r\n                    await createSupplierInvoice(form);\r\n                    setPhase(0);\r\n                    toast.success('Invoice Created Successfully');\r\n                    history.push('/dashboard/supplier/invoices');\r\n                }\r\n            } catch (err) {\r\n                toast.error('Something went wrong!');\r\n                setPhase(0);\r\n            }\r\n        },\r\n        [form, phase, setPhase]\r\n    )\r\n\r\n    return (\r\n        <div className=\"animated fadeIn\">\r\n            <Card>\r\n                <CardHeader>\r\n                    {props.match.params.id ? <b>Edit Invoice</b> : <b>Create Invoice</b>}\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form method=\"post\" onSubmit={handleSubmit}>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                {renderCustomerInput()}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"invoice_number\">Invoice#*</Label>\r\n                                    <Input type=\"text\" name=\"invoice_number\" id=\"invoice_number\" value={form.invoice_number}\r\n                                        onChange={handleInputChange} required />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"invoice_date\">Invoice Date*</Label>\r\n                                    <Input type=\"date\" name=\"invoice_date\" id=\"invoice_date\" value={form.invoice_date}\r\n                                        onChange={handleInputChange} required />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"invoice_due_date\">Invoice Due Date*</Label>\r\n                                    <Input type=\"date\" name=\"invoice_due_date\" id=\"invoice_due_date\" value={form.invoice_due_date}\r\n                                        onChange={handleInputChange} required />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"place_of_supply\">Place of Supply</Label>\r\n                                    <Input type=\"text\" name=\"place_of_supply\" id=\"place_of_supply\" value={form.place_of_supply}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"service_month\">Service Month</Label>\r\n                                    <Input type=\"text\" name=\"service_month\" id=\"service_month\" value={form.service_month}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        <Table className=\"mt-3\" striped responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Item Details</th>\r\n                                    <th>LR No.</th>\r\n                                    <th>Vehicle No</th>\r\n                                    <th>Date</th>\r\n                                    <th>QTY</th>\r\n                                    <th>Rate</th>\r\n                                    <th>GST</th>\r\n                                    <th>Amount</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {renderItemsList()}\r\n                                <tr>\r\n                                    <td>\r\n                                        <Input type=\"select\" name=\"invoice_transaction_desc\" value={itemsForm.invoice_transaction_desc} onChange={handleItemsInputChange} placeholder=\"Item Details\" bsSize=\"sm\">\r\n                                            <option value={\"\"} defaultValue>Select Item</option>\r\n                                            {renderItemsOptions(items)}\r\n                                        </Input>\r\n                                    </td>\r\n                                    <td><Input type=\"number\" name=\"invoice_transaction_lr\" value={itemsForm.invoice_transaction_lr} onChange={handleItemsInputChange} bsSize=\"sm\" /></td>\r\n                                    <td><Input type=\"text\" name=\"invoice_transaction_vehicle\" value={itemsForm.invoice_transaction_vehicle} onChange={handleItemsInputChange} bsSize=\"sm\" /></td>\r\n                                    <td><Input type=\"date\" name=\"invoice_transaction_date\" value={itemsForm.invoice_transaction_date} onChange={handleItemsInputChange} bsSize=\"sm\" /></td>\r\n                                    <td><Input type=\"number\" name=\"invoice_transaction_qty\" value={itemsForm.invoice_transaction_qty} bsSize=\"sm\" onChange={handleItemsInputChange} /></td>\r\n                                    <td><Input type=\"number\" name=\"invoice_transaction_rate\" value={itemsForm.invoice_transaction_rate} onChange={handleItemsInputChange} bsSize=\"sm\" /></td>\r\n                                    <td><Input type=\"number\" name=\"invoice_transaction_gst\" value={itemsForm.invoice_transaction_gst} onChange={handleItemsInputChange} bsSize=\"sm\" /></td>\r\n                                    <td><Input type=\"number\" name=\"invoice_transaction_amount\" value={calculateItemAmount(itemsForm.invoice_transaction_qty, itemsForm.invoice_transaction_rate, itemsForm.invoice_transaction_gst)} bsSize=\"sm\" disabled /></td>\r\n                                    <td>\r\n                                        <Button type=\"button\" title=\"Add\" onClick={addItem} color=\"success\" size=\"sm\">\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                        <hr />\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"company_notes\">Company Notes</Label>\r\n                                    <Input type=\"textarea\" name=\"company_notes\" id=\"company_notes\" value={form.company_notes}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"terms_and_conditions\">Terms and Conditions</Label>\r\n                                    <Input type=\"textarea\" name=\"terms_and_conditions\" id=\"terms_and_conditions\" value={form.terms_and_conditions}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        {btnLoader()}\r\n                        {' '}\r\n                        <Link to=\"/supplier/invoices\">\r\n                            <Button type=\"button\" color=\"link\" size=\"lg\">Cancel</Button>\r\n                        </Link>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvoiceForm;"],"sourceRoot":""}