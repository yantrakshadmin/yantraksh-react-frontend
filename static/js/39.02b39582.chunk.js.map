{"version":3,"sources":["screens/supplier/forms/addMastersItem.js"],"names":["AddMastersItem","props","optionsData","_useState","useState","type","name","sku","unit","hsn_sac_code","tax_preference","exemption_reason","sales_selling_price","purchase_cost_price","intra_state_tax_rate","inter_state_tax_rate","remarks","_useState2","Object","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","form","setForm","useEffect","match","params","id","_ref","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","itemData","wrap","_context","prev","next","fetchMasterItem","sent","stop","apply","this","arguments","fetchItemData","_useState3","_useState4","phase","setPhase","handleInputChange","useCallback","event","target","value","checked","_objectSpread","C_Users_Rahul_Sharma_PycharmProjects_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","renderOptions","data","map","o","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","key","renderTaxInput","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","md","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_9__","onChange","defaultValue","disabled","btnLoader","reactstrap__WEBPACK_IMPORTED_MODULE_10__","color","size","className","role","aria-hidden","handleSubmit","_ref2","_callee2","_context2","preventDefault","editMasterItem","toast","success","createMasterItem","history","push","t0","error","_x","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","method","onSubmit","tag","check","required","react_router_dom__WEBPACK_IMPORTED_MODULE_15__","to"],"mappings":"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","file":"static/js/39.02b39582.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Card, CardHeader, CardBody, Form, FormGroup, Row, Col, Label, Input, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { createMasterItem, fetchMasterItem, editMasterItem } from '../../../helpers/api';\r\nimport history from '../../../history';\r\n\r\n\r\nconst AddMastersItem = props => {\r\n\r\n    const optionsData = {\r\n        tax_preference: [\r\n            'Taxable',\r\n            'Non-Taxable',\r\n        ],\r\n        unit: [\r\n            'box',\r\n            'cm',\r\n            'ft',\r\n            'g',\r\n            'in',\r\n            'kg',\r\n            'km',\r\n            'm',\r\n            'pcs',\r\n            'unit',\r\n        ],\r\n        intra_state_tax_rate: [\r\n            'GST0 [0%]',\r\n            'GST5 [5%]',\r\n            'GST12 [12%]',\r\n            'GST18 [18%]',\r\n            'GST28 [28%]',\r\n        ],\r\n        inter_state_tax_rate: [\r\n            'IGST0 [0%]',\r\n            'IGST5 [5%]',\r\n            'IGST12 [12%]',\r\n            'IGST18 [18%]',\r\n            'IGST28 [28%]',\r\n        ]\r\n    }\r\n\r\n    const [form, setForm] = useState({\r\n        type: 'Goods',\r\n        name: '',\r\n        sku: '',\r\n        unit: '',\r\n        hsn_sac_code: '',\r\n        tax_preference: 'Taxable',\r\n        exemption_reason: '',\r\n\r\n        sales_selling_price: '',\r\n        purchase_cost_price: '',\r\n\r\n        intra_state_tax_rate: '',\r\n        inter_state_tax_rate: '',\r\n        remarks: '',\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (props.match.params.id) {\r\n            const fetchItemData = async () => {\r\n                const itemData = await fetchMasterItem(props.match.params.id);\r\n                setForm(itemData);\r\n            }\r\n            fetchItemData();\r\n        }\r\n    }, [setForm])\r\n\r\n    const [phase, setPhase] = useState(0);\r\n\r\n    const handleInputChange = useCallback(\r\n        event => {\r\n            const target = event.target;\r\n            const value = target.type === 'checkbox' ? target.checked : target.value;\r\n            const name = target.name;\r\n\r\n            setForm({\r\n                ...form,\r\n                [name]: value\r\n            });\r\n        },\r\n        [form, setForm]\r\n    )\r\n\r\n    const renderOptions = useCallback(\r\n        data => {\r\n            return data.map(o => {\r\n                return <option key={o} value={o}>{o}</option>;\r\n            });\r\n        },\r\n        []\r\n    )\r\n\r\n    const renderTaxInput = useCallback(\r\n        () => {\r\n            if (form.intra_state_tax_rate && !form.inter_state_tax_rate) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"intra_state_tax_rate\">Intra State Tax Rate</Label>\r\n                                <Input type=\"select\" id=\"intra_state_tax_rate\"\r\n                                    name={\"intra_state_tax_rate\"}\r\n                                    value={form.intra_state_tax_rate}\r\n                                    onChange={handleInputChange}>\r\n                                    <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                    {renderOptions(optionsData.intra_state_tax_rate)}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"inter_state_tax_rate\">Inter State Tax Rate</Label>\r\n                                <Input type=\"select\" id=\"inter_state_tax_rate\"\r\n                                    name={\"inter_state_tax_rate\"}\r\n                                    value={form.inter_state_tax_rate}\r\n                                    onChange={handleInputChange} disabled>\r\n                                    <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            } else if (!form.intra_state_tax_rate && form.inter_state_tax_rate) {\r\n                return (\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"intra_state_tax_rate\">Intra State Tax Rate</Label>\r\n                                <Input type=\"select\" id=\"intra_state_tax_rate\"\r\n                                    name={\"intra_state_tax_rate\"}\r\n                                    value={form.intra_state_tax_rate}\r\n                                    onChange={handleInputChange} disabled>\r\n                                    <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"inter_state_tax_rate\">Inter State Tax Rate</Label>\r\n                                <Input type=\"select\" id=\"inter_state_tax_rate\"\r\n                                    name={\"inter_state_tax_rate\"}\r\n                                    value={form.inter_state_tax_rate}\r\n                                    onChange={handleInputChange}>\r\n                                    <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                    {renderOptions(optionsData.inter_state_tax_rate)}\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            }\r\n            return (\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"intra_state_tax_rate\">Intra State Tax Rate</Label>\r\n                            <Input type=\"select\" id=\"intra_state_tax_rate\"\r\n                                name={\"intra_state_tax_rate\"}\r\n                                value={form.intra_state_tax_rate}\r\n                                onChange={handleInputChange}>\r\n                                <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                {renderOptions(optionsData.intra_state_tax_rate)}\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"inter_state_tax_rate\">Inter State Tax Rate</Label>\r\n                            <Input type=\"select\" id=\"inter_state_tax_rate\"\r\n                                name={\"inter_state_tax_rate\"}\r\n                                value={form.inter_state_tax_rate}\r\n                                onChange={handleInputChange}>\r\n                                <option value={\"\"} defaultValue>Select a Tax</option>\r\n                                {renderOptions(optionsData.inter_state_tax_rate)}\r\n                            </Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        },\r\n        [form,]\r\n    )\r\n\r\n    const btnLoader = useCallback(\r\n        () => {\r\n            if (phase === 1) {\r\n                return (\r\n                    <Button color=\"primary\" size=\"lg\" disabled>\r\n                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving\r\n                    </Button>\r\n                );\r\n            }\r\n            return <Button type=\"submit\" color=\"primary\" size=\"lg\">Save</Button>;\r\n        },\r\n        [phase,]\r\n    )\r\n\r\n    const handleSubmit = useCallback(\r\n        async event => {\r\n            event.preventDefault();\r\n            setPhase(1);\r\n            try {\r\n                if (props.match.params.id) {\r\n                    await editMasterItem(props.match.params.id, form);\r\n                    setPhase(0);\r\n                    toast.success('Item Updated Successfully');\r\n                } else {\r\n                    await createMasterItem(form);\r\n                    setPhase(0);\r\n                    toast.success('Item Created Successfully');\r\n                    history.push('/dashboard/masters/items');\r\n                }\r\n\r\n            } catch (err) {\r\n                toast.error('Something went wrong!');\r\n                setPhase(0);\r\n            }\r\n        },\r\n        [form, setPhase,]\r\n    )\r\n\r\n    return (\r\n        <div className=\"animated fadeIn\">\r\n            <Card>\r\n                <CardHeader>\r\n                    {props.match.params.id ? <b>Edit Item</b> : <b>Add Item</b>}\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form method=\"post\" onSubmit={handleSubmit}>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup tag=\"fieldset\">\r\n                                    <Label>Type</Label>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input value=\"Goods\" checked={form.type === \"Goods\"} type=\"radio\" name=\"type\" onChange={handleInputChange} />{' '}\r\n                                            Goods\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input value=\"Service\" checked={form.type === \"Service\"} type=\"radio\" name=\"type\" onChange={handleInputChange} />{' '}\r\n                                            Service\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"name\">Name*</Label>\r\n                                    <Input type=\"text\" name=\"name\" id=\"name\" value={form.name}\r\n                                        onChange={handleInputChange} required />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"sku\">SKU</Label>\r\n                                    <Input type=\"text\" name=\"sku\" id=\"sku\" value={form.sku}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"unit\">Unit</Label>\r\n                                    <Input type=\"select\" id=\"unit\"\r\n                                        name={\"unit\"}\r\n                                        value={form.unit}\r\n                                        onChange={handleInputChange}\r\n                                    >\r\n                                        <option value={\"\"} defaultValue>Select Unit</option>\r\n                                        {renderOptions(optionsData.unit)}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"hsn_sac_code\">HSN / SAC Code</Label>\r\n                                    <Input type=\"text\" name=\"hsn_sac_code\" id=\"hsn_sac_code\" value={form.hsn_sac_code}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"tax_preference\">Tax Preference</Label>\r\n                                    <Input type=\"select\" id=\"tax_preference\"\r\n                                        name={\"tax_preference\"}\r\n                                        value={form.tax_preference}\r\n                                        onChange={handleInputChange}\r\n                                    >\r\n                                        {renderOptions(optionsData.tax_preference)}\r\n                                    </Input>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            {\r\n                                form.tax_preference === \"Non-Taxable\" ? (\r\n                                    <Col md={8}>\r\n                                        <FormGroup>\r\n                                            <Label htmlFor=\"exemption_reason\">Exemption Reason*</Label>\r\n                                            <Input type=\"text\" name=\"exemption_reason\" id=\"exemption_reason\" value={form.exemption_reason}\r\n                                                onChange={handleInputChange} required />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                ) : (null)\r\n                            }\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"sales_selling_price\">Selling Price</Label>\r\n                                    <Input type=\"text\" name=\"sales_selling_price\" id=\"sales_selling_price\" value={form.sales_selling_price}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"purchase_cost_price\">Cost Price</Label>\r\n                                    <Input type=\"text\" name=\"purchase_cost_price\" id=\"purchase_cost_price\" value={form.purchase_cost_price}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        {renderTaxInput()}\r\n\r\n                        <hr />\r\n\r\n                        <Row>\r\n                            <Col md={8}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"remarks\">Remarks</Label>\r\n                                    <Input type=\"text\" name=\"remarks\" id=\"remarks\" value={form.remarks}\r\n                                        onChange={handleInputChange} />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <hr />\r\n\r\n                        {btnLoader()}\r\n                        {' '}\r\n                        <Link to=\"/masters/items\">\r\n                            <Button type=\"button\" color=\"link\" size=\"lg\">Cancel</Button>\r\n                        </Link>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMastersItem;\r\n"],"sourceRoot":""}