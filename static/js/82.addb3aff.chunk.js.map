{"version":3,"sources":["components/dataTable.js","screens/shipper/shipping/tracking.js"],"names":["NCSVButton","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","onClick","onExport","__webpack_exports__","_useState","useState","_useState2","Object","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loadingIndicator","changeLoadingIndicator","useEffect","setTimeout","columns","_props$data","data","_props$right","right","_props$left","left","_props$refPass","refPass","_props$loading","loading","_props$keyField","loaded","keyField","select","_props$expandRow","expandRow","_props$noDataIndicati","noDataIndication","section","Loader","searchClass","searchContainerClass","exportAll","headerClasses","unusedprops","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3___default","search","exportCSV","onlyExportSelection","xprops","style","paddingTop","paddingBottom","float","display","csvProps","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3__","SearchBar","assign","searchProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","baseProps","wrapperClasses","ref","node","hover","condensed","bordered","pagination","paginationFactory","selectRow","styles","height","DispatchMap","console","log","location","length","react__WEBPACK_IMPORTED_MODULE_7___default","google_maps_react__WEBPACK_IMPORTED_MODULE_14__","google","zoom","center","lat","loc","lng","name","position","DispatchMapWrapper","GoogleApiWrapper","apiKey","GOOGLE_API_KEY","Tracking","_this","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","plan","_this2","getTrucks","_ref","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_Desktop_yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","truckData","wrap","_context","prev","next","refreshing","assignedTrucks","sent","setState","stop","apply","arguments","getLoacation","_ref2","_callee2","id","locationPlan","_context2","trackNow","_x","_this3","assignedTruckColumns","dataField","text","sort","formatter","cell","row","scheduled_date","slice","isDummyField","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","_callee3","_context3","dispatchListColumns","createdAt","address","curr_ETA","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap_es_CardHeader__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","_components_dataTable__WEBPACK_IMPORTED_MODULE_8__","React","Component"],"mappings":"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","file":"static/js/82.addb3aff.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport Loader from \"./loader\";\n\nconst NCSVButton = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <button className=\"btn\" onClick={handleClick}>\n            <i className={\"fa fa-download\"} /> &nbsp;\n            Export to CSV\n        </button>\n    );\n};\n\nexport default (props) => {\n    const [loadingIndicator, changeLoadingIndicator] = useState(true);\n    useEffect(() => { setTimeout(() => { changeLoadingIndicator(false); }, 5000) },\n        [loadingIndicator]);\n    const {\n        columns, data = [], right = () => {\n        }, left = () => {\n        }, refPass = () => {\n        }, loading = false, loaded = true, keyField = \"id\",\n        select,\n        expandRow = {},\n        noDataIndication = { Loader },\n        section,\n        searchClass,\n        searchContainerClass,\n        exportAll,\n        headerClasses,\n        ...unusedprops\n    } = props;\n\n    return (\n        <ToolkitProvider\n            keyField={keyField}\n            data={data}\n            columns={columns}\n            search\n            exportCSV={{ onlyExportSelection: !exportAll, exportAll: true }}\n        >\n            {\n                xprops => (\n                    <div>\n                        <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n                            {left(xprops)}\n                            <div className={searchContainerClass} style={{ float: 'right', display: 'inline-block' }}>\n                                {right(xprops)}\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <NCSVButton {...xprops.csvProps} />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <Search.SearchBar className={searchClass} {...xprops.searchProps} />\n                            </div>\n                        </div>\n                        {section ? (\n                            <div style={{ paddingTop: 10, paddingBottom: 10 }}>\n                                {section}\n                            </div>\n                        ) : null}\n                        <BootstrapTable\n                            {...xprops.baseProps}\n                            wrapperClasses=\"table-responsive\"\n                            ref={node => refPass(node)}\n                            hover\n                            condensed\n                            bordered={false}\n                            pagination={paginationFactory()}\n                            selectRow={select}\n                            loading={loading}\n                            expandRow={expandRow}\n                            headerClasses={headerClasses}\n                            noDataIndication={loadingIndicator ? Loader : <div className={'w-100'}><p>No Data</p></div>}\n                            {...unusedprops}\n                        />\n                    </div>\n                )\n            }\n        </ToolkitProvider>\n    );\n}\n","import React from \"react\";\nimport DataTable from \"../../../components/dataTable\";\nimport { Button, Card, CardBody, CardFooter, Col, Row } from \"reactstrap\";\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react'\nimport CardHeader from \"reactstrap/es/CardHeader\";\nimport { assignedTrucks, trackNow } from \"../../../helpers/api\";\nimport { refreshing } from \"../../../helpers/notifications\";\n\n\nimport { GOOGLE_API_KEY } from '../../../helpers/api';\n\nconst styles = {\n    height: '100%',\n\n\n}\n\n\nconst DispatchMap = (props) => {\n    console.log(props, \"here\");\n    if (props.location.length === 0) {\n        return null;\n    }\n    return <Map google={props.google}\n        style={styles}\n        zoom={12}\n        center={{\n            lat: props.location[0].loc[0],\n            lng: props.location[0].loc[1],\n            // lat:33,\n            //     lng:72\n        }}\n\n\n    >\n        <Marker\n            name={'Your position'}\n            style={styles}\n            position={{\n                lat: props.location[0].loc[0],\n                lng: props.location[0].loc[1],\n                // lat:33,\n                // lng:72\n            }}\n        />\n    </Map>\n};\nconst DispatchMapWrapper = GoogleApiWrapper({\n    apiKey: GOOGLE_API_KEY,\n})(DispatchMap);\n\nclass Tracking extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            plan: [{ loc: [20.5937, 78.9629] }],\n            data: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        const getTrucks = async () => {\n            refreshing();\n            const truckData = await assignedTrucks();\n            this.setState({ data: truckData });\n            console.log(truckData, \"truck\")\n        };\n        const getLoacation = async (id) => {\n            const locationPlan = await trackNow(id);\n            this.setState({ data: locationPlan });\n            this.setState({ loading: false });\n\n            console.log(locationPlan, \"locationPlan\");\n        };\n\n        getTrucks();\n        getLoacation();\n    }\n\n\n    render() {\n\n        console.log(DispatchMap);\n\n\n        const assignedTruckColumns = [\n            {\n                dataField: 'id',\n                text: 'Trip ID',\n                sort: true\n\n            },\n\n            {\n                dataField: 'origin',\n                text: 'Origin',\n                sort: true\n\n            }, {\n                dataField: 'destination',\n                text: 'Destination',\n                sort: true\n            }, {\n                dataField: 'scheduled_date',\n                text: 'Date',\n                sort: true,\n                formatter: (cell, row) => {\n                    return (\n                        <div>\n                            {row.scheduled_date.slice(0, 10)}\n                        </div>\n                    )\n                }\n            }, {\n                dataField: 'offered_price',\n                text: 'Offered Price',\n                sort: true\n            },\n            {\n                dataField: 'trackNow',\n                isDummyField: true,\n                text: 'Track Now',\n                sort: true,\n                formatter: (cell, row) => (\n                    <div>\n\n                        <Button color=\"primary\" onClick={async () => {\n                            const locationPlan = await trackNow(row.id);\n                            console.log(locationPlan);\n                            this.setState({\n                                plan: locationPlan,\n                                loading: false,\n                            })\n                        }\n\n                        }>\n\n                            Track Now!\n\n                        </Button>\n\n                    </div>\n                )\n\n            }];\n\n\n        const dispatchListColumns = [\n            {\n                dataField: 'Date and Time',\n                text: 'Date and time ',\n                sort: true,\n                formatter: (cell, row) => {\n                    return (\n                        <div><span>\n                            {row.createdAt.slice(0, 10)}\n                        </span>\n\n                            &nbsp;&nbsp;\n\n                            <span>\n\n                                {row.createdAt.slice(11, 19)}\n\n\n                            </span>\n                        </div>\n                    )\n                }\n            },\n            {\n                dataField: 'tel',\n                text: 'Location',\n                sort: true,\n                formatter: (cell, row) => {\n                    return (row.address)\n                }\n            },\n\n            {\n                dataField: 'curr_ETA',\n                text: 'ETA',\n                sort: true,\n                formatter: (cell, row) => {\n                    return (\n\n                        <div><span>\n                            {row.curr_ETA.slice(0, 10)}\n                        </span>\n\n                            &nbsp;&nbsp;\n\n                            <span>\n\n                                {row.curr_ETA.slice(11, 19)}\n\n\n                            </span>\n                        </div>\n\n                    )\n                }\n            },\n\n\n        ];\n\n\n        return (\n            <Row>\n                {/*<DispatchMapWrapper/>*/}\n\n\n                <Col md={6}>\n\n                    <Card>\n                        <CardHeader>\n                            <b>Assigned Trucks</b>\n                        </CardHeader>\n                        <CardBody>\n                            <DataTable columns={assignedTruckColumns} data={this.state.data} />\n                        </CardBody>\n                    </Card>\n\n                </Col>\n\n\n                <Col md={6}>\n                    <Card style={{ height: '21vw' }}>\n                        <CardHeader>\n                            <b>Route</b>\n                        </CardHeader>\n                        <CardBody className={\"trackingCard\"}>\n\n                            <DispatchMapWrapper location={this.state.plan} loading={this.state.loading} />\n                        </CardBody>\n\n                    </Card>\n\n\n                    <Card className=\"locationTable\">\n                        <CardHeader>\n                            <b>Location Details</b>\n                        </CardHeader>\n                        <DataTable columns={dispatchListColumns} data={this.state.plan} />\n\n                    </Card>\n                </Col>\n            </Row>\n        )\n\n\n    }\n}\n\nexport default Tracking\n"],"sourceRoot":""}