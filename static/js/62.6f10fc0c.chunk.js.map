{"version":3,"sources":["screens/signUpScreenShipper.js","screens/supplier/signUpScreen.js"],"names":["USERNAME_REGEX","SignUpScreenSupplier","props","_this","Object","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","handleChange","event","target","value","type","checked","name","setState","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","onSubmit","_ref","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","e","errors","data","_this$state","username","email","password","company_code","company_name","wrap","_context","prev","next","preventDefault","state","match","toast","error","isUsernameAvailable","sent","available","push","concat","confirmpass","length","join","signUpUserSupplier","userCreateSuccess","signInAction","t0","userCreateFailed","console","log","signUpUserShipper","t1","stop","_x","apply","arguments","companiesList","_this2","getCompanyShipper","CREATE_ACCOUNT_SHIPPER","then","result","catch","CREATE_ACCOUNT_SUPPLIER","_this3","isAuthenticated","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","react_router_es_Redirect__WEBPACK_IMPORTED_MODULE_25__","to","redirectTo","split","className","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","md","lg","xl","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_17__","placeholder","onChange","htmlFor","id","selected","map","element","key","confPass","reactstrap__WEBPACK_IMPORTED_MODULE_18__","color","block","reactstrap__WEBPACK_IMPORTED_MODULE_19__","Component","connect","auth","authenticated","navigation","dispatch","signIn","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_signUpScreenShipper__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/62.6f10fc0c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Row\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    isUsernameAvailable,\r\n    signUpUserShipper,\r\n    signUpUserSupplier,\r\n    getCompanyShipper,\r\n    CREATE_ACCOUNT_SUPPLIER, CREATE_ACCOUNT_SHIPPER\r\n} from \"../helpers/api\";\r\nimport { userCreateSuccess, userCreateFailed } from '../helpers/notifications';\r\nimport {toast} from \"react-toastify\";\r\nimport {signIn} from \"../actions/auth\";\r\nimport {connect} from \"react-redux\";\r\nimport Redirect from \"react-router/es/Redirect\";\r\n\r\n// const NAME_REGEX = '^[A-Z a-z]';\r\nconst USERNAME_REGEX = '^[\\\\w.@+-]+$';\r\n\r\n// const PASSWORD_REGEX = '^.{6}.+$';\r\n\r\nclass SignUpScreenSupplier extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpass: '',\r\n            company_code: '',\r\n            company_name: '',\r\n            companiesList: [],\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let errors = [];\r\n\r\n        // if (!this.state.first_name)\r\n        //     errors.push('Name is not valid.');\r\n        //\r\n        // if (!this.state.password.match(PASSWORD_REGEX))\r\n        //     errors.push('Password not valid');\r\n\r\n        if (!this.state.username.match(USERNAME_REGEX))\r\n            toast.error(\"Username not valid\");\r\n        else {\r\n            const data = await isUsernameAvailable(this.state.username);\r\n            if (!data.available)\r\n                errors.push(`Username '${data.username}' not available`);\r\n        }\r\n        if (this.state.confirmpass !== this.state.password)\r\n            errors.push('Password and confirm password is not same');\r\n        if (errors.length !== 0)\r\n            toast.error(errors.join('\\n'));\r\n        else {\r\n            if (this.props.type === \"Supplier\") {\r\n                try {\r\n                    await signUpUserSupplier(this.state);\r\n                    userCreateSuccess(\"Supplier\");\r\n                    this.props.signInAction(this.state.username, this.state.password)\r\n                } catch (e) {\r\n                    userCreateFailed();\r\n                    console.log(e)\r\n                }\r\n            }\r\n            if (this.props.type === \"Shipper\") {\r\n                try {\r\n                    const {username, email, password, company_code, company_name} = this.state;\r\n                    await signUpUserShipper({\r\n                        username: username,\r\n                        email: email,\r\n                        password: password,\r\n                        company_name: company_name,\r\n                        company_code: company_code\r\n                    });\r\n                    userCreateSuccess(\"Shipper\");\r\n                    this.props.signInAction(this.state.username, this.state.password)\r\n                } catch (e) {\r\n                    userCreateFailed();\r\n                    console.log(e)\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === \"Shipper\") {\r\n            getCompanyShipper(CREATE_ACCOUNT_SHIPPER)\r\n                .then((result) => {\r\n                    this.setState({companiesList: result})\r\n                })\r\n                .catch(e => console.log(e))\r\n        } else if (this.props.type === \"Supplier\") {\r\n            getCompanyShipper(CREATE_ACCOUNT_SUPPLIER)\r\n                .then((result) => {\r\n                    this.setState({companiesList: result})\r\n                })\r\n                .catch(e => console.log(e))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {companiesList} = this.state;\r\n        if (this.props.isAuthenticated)\r\n            return <Redirect to={`${this.props.redirectTo.split('#')[1]}`}/>;\r\n        return (\r\n            <div className=\"app flex-row align-items-center\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n                            <Card className=\"mx-4\">\r\n                                <CardBody className=\"p-4\">\r\n                                    <Form onSubmit={this.onSubmit}>\r\n                                        <input type=\"hidden\" className={\"form-control\"} name=\"user-type\"\r\n                                               value={this.props.type}/>\r\n                                        <h1>Register for {this.props.type}</h1>\r\n                                        <p className=\"text-muted\">Create your account</p>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-user\"/>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <input type=\"text\"\r\n                                                   placeholder={'Username'}\r\n                                                   className={\"form-control\"}\r\n                                                   name={\"username\"}\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.username}/>\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>@</InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <input type=\"email\" name={\"email\"}\r\n                                                   className={\"form-control\"}\r\n                                                   placeholder={'Email'}\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.email}/>\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-3\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-lock\"/>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <input type=\"password\"\r\n                                                   placeholder={'Password'}\r\n                                                   name={\"password\"}\r\n                                                   className={\"form-control\"}\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.password}/>\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-4\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"icon-lock\"/>\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <input type=\"password\"\r\n                                                   placeholder={'Confirm Password'}\r\n                                                   name={\"confirmpass\"}\r\n                                                   className={\"form-control\"}\r\n                                                   onChange={this.handleChange}\r\n                                                   value={this.state.confirmpass}/>\r\n\r\n                                        </InputGroup>\r\n                                        <InputGroup className=\"mb-4\">\r\n                                            <div className=\"input-group-prepend\">\r\n                                                <label className=\"input-group-text\"\r\n                                                       htmlFor=\"inputGroupSelect01\">Company</label>\r\n                                            </div>\r\n                                            <select onChange={(e) => {\r\n                                                this.setState({company_name: e.target.value})\r\n                                            }} className=\"custom-select\" id=\"inputGroupSelect01\">\r\n                                                <option selected>Choose...</option>\r\n                                                {companiesList.map((element) => (\r\n                                                        <option key={element.company_name}>{element.company_name}</option>\r\n                                                    )\r\n                                                )}\r\n                                            </select>\r\n                                        </InputGroup>\r\n                                            <InputGroup className=\"mb-4\">\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                        <i className=\"icon-lock\"/>\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <input type=\"number\"\r\n                                                       placeholder={'Company Code'}\r\n                                                       name={\"company_code\"}\r\n                                                       className={\"form-control\"}\r\n                                                       onChange={this.handleChange}\r\n                                                       value={this.state.company_code}/>\r\n                                            </InputGroup>\r\n                                        {this.state.password !== this.state.confPass ? \"Password and confirm password should be same\" : \"\"}\r\n                                        <br/>\r\n                                        <br/>\r\n                                        <Button color=\"success\" block>Create Account</Button>\r\n                                    </Form>\r\n                                </CardBody>\r\n                                <CardFooter className=\"p-4\"/>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.auth.authenticated,\r\n    redirectTo: state.navigation.redirectTo\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signInAction: (username, password) => dispatch(signIn(username, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreenSupplier);\r\n","import React from \"react\";\r\nimport SignUpScreen from \"../signUpScreenShipper\";\r\n\r\nexport default () => (\r\n    <SignUpScreen type={'Supplier'}/>\r\n)\r\n"],"sourceRoot":""}