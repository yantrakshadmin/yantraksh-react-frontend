{"version":3,"sources":["components/dataTable.js","actions/data.js","components/upload.js","data/orderTitles.js","data/columns/orders.js","components/orderTable.js","screens/shipper/orderManagement/dispatchedOrders.js"],"names":["NCSVButton","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","onClick","onExport","__webpack_exports__","_useState","useState","_useState2","Object","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loadingIndicator","changeLoadingIndicator","useEffect","setTimeout","columns","_props$data","data","_props$right","right","_props$left","left","_props$refPass","refPass","_props$loading","loading","_props$keyField","loaded","keyField","select","_props$expandRow","expandRow","_props$noDataIndicati","noDataIndication","section","Loader","searchClass","searchContainerClass","exportAll","headerClasses","unusedprops","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3___default","search","exportCSV","onlyExportSelection","xprops","style","paddingTop","paddingBottom","float","display","csvProps","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3__","SearchBar","assign","searchProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","baseProps","ref","node","hover","condensed","bordered","pagination","paginationFactory","selectRow","loadOrders","_ref","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","getState","orders","wrap","_context","prev","next","getShipperAllOrderDetails","sent","type","ORDERS_LOADED","orderLoadedSuccessfully","t0","errorFetchingData","stop","_x","_x2","apply","this","arguments","markOrdersOnHold","selected","redirect","_ref2","_callee2","_context2","slice","ORDERS_CHANGING","markHoldItemsApi","map","item","index","includes","id","rtd","is_dispatched","_x3","_x4","markOrdersRTD","_ref3","_callee3","_context3","markItemsForDispatchApi","_x5","_x6","planVehiclesForOrders","_ref4","_callee4","_context4","planVehicle","_x7","_x8","planVehiclesManuallyForOrders","truckID","noOfTrucks","_ref5","_callee5","_context5","planVehicleManuallyButton","history","push","_x9","_x10","Basic","_useDropzone","useDropzone","acceptedFiles","getRootProps","getInputProps","console","log","react__WEBPACK_IMPORTED_MODULE_8___default","height","justifyContent","alignItems","padding","textAlign","path","size","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","upload","onClose","toast","success","error","react_router_dom_es_Link__WEBPACK_IMPORTED_MODULE_13__","to","e","fontSize","Upload","_this","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","modal","backdrop","toggle","bind","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","changeBackdrop","setState","prevState","value","target","JSON","parse","reactstrap__WEBPACK_IMPORTED_MODULE_10__","isOpen","width","top","backgroundColor","React","Component","connect","__webpack_require__","d","ALL_ORDERS","ON_HOLD_ORDERS","RTD_ORDERS","DISPATCHED_ORDERS","columns_orders","dataField","text","sort","isDummyField","formatter","cell","row","react_default","Length","Breadth","Height","hrs","getHours","mins","getMinutes","secs","getSeconds","getDate","getMonth","getFullYear","formatDate","Date","date","formatExtraData","truck_type","Badge","rowIndex","align","filterData","hold","dispatched","origin","length","undefined","destination","xd","originMatch","toUpperCase","destinationMatch","OrderTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","tableNode","getSelectedData","selectionContext","checkOriginDestinationMatch","key","myArray","i","isValid","checkTruckTypeMatch","handleOnSelect","isSelect","concat","toConsumableArray","filter","x","handleOnSelectAll","rows","ids","r","kpi","total_time","total_trucks","total_orders","total_orders_planned","total_rfq","total_bids","total_orders_hold","total_orders_delayed","total_orders_pending","total_trucks_assigned","total_trucks_in_transit","total_weight","total_distance","trucks","selectedTruck","truckType","originSelected","destinationSelected","markHold","markRTD","planVehicleManually","getKPIData","allAvailableTrucks","trucksData","getOrders","_this2","_this$props","_this$props$orders","title","_this$props$rtd","_this$props$hold","_this$props$dispatche","changing","sparkLineChartData","label","brandPrimary","getStyle","brandDanger","sparklineChartOpts","tooltips","enabled","responsive","maintainAspectRatio","scales","xAxes","yAxes","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","hoverBorderWidth","legend","makeSparkLineData","dataSetNo","variant","dataset","labels","datasets","borderColor","vehiclePickerModal","Modal","modalToggle","ModalHeader","ModalBody","htmlFor","Input","name","onChange","disabled","_","uniqBy","truck","Category","display_name","ButtonGroup","Button","p","index_es","icon","faMinus","faPlus","ModalFooter","Form","Row","form","Col","md","self","indexOf","Card","CardHeader","sm","react_chartjs_2_es","options","dist","CardBody","Nav","tabs","NavItem","NavLink","href","active","dataTable","uploadOrders","refreshing","mode","onSelect","onSelectAll","clickToSelect","withRouter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_orderTable__WEBPACK_IMPORTED_MODULE_1__","_data_orderTitles__WEBPACK_IMPORTED_MODULE_2__","react_redux__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"static/js/33.72de12ac.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport Loader from \"./loader\";\r\n\r\nconst NCSVButton = (props) => {\r\n    const handleClick = () => {\r\n        props.onExport();\r\n    };\r\n    return (\r\n        <button className=\"btn\" onClick={handleClick}>\r\n            <i className={\"fa fa-download\"}/> &nbsp;\r\n            Export to CSV\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default (props) => {\r\n    const [loadingIndicator,changeLoadingIndicator] = useState(true);\r\n    useEffect(()=>{setTimeout(()=>{changeLoadingIndicator(false);},5000)},\r\n[loadingIndicator]);\r\n    const {\r\n        columns, data = [], right = () => {\r\n        }, left = () => {\r\n        }, refPass = () => {\r\n        }, loading = false, loaded = true, keyField = \"id\",\r\n        select,\r\n        expandRow = {},\r\n        noDataIndication={Loader},\r\n        section,\r\n        searchClass,\r\n        searchContainerClass,\r\n        exportAll,\r\n        headerClasses,\r\n        ...unusedprops\r\n    } = props;\r\n\r\n    return (\r\n        <ToolkitProvider\r\n            keyField={keyField}\r\n            data={data}\r\n            columns={columns}\r\n            search\r\n            exportCSV={{onlyExportSelection: !exportAll, exportAll: true}}\r\n        >\r\n            {\r\n                xprops => (\r\n                    <div>\r\n                        <div style={{paddingTop: 10, paddingBottom: 10}}>\r\n                            {left(xprops)}\r\n                            <div className={searchContainerClass} style={{float: 'right', display: 'inline-block'}}>\r\n                                {right(xprops)}\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <NCSVButton {...xprops.csvProps} />\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                <Search.SearchBar className={searchClass} {...xprops.searchProps} />\r\n                            </div>\r\n                        </div>\r\n                        {section ? (\r\n                            <div style={{paddingTop: 10, paddingBottom: 10}}>\r\n                                {section}\r\n                            </div>\r\n                        ) : null}\r\n                        <BootstrapTable\r\n                            {...xprops.baseProps}\r\n                            ref={node => refPass(node)}\r\n                            hover\r\n                            condensed\r\n                            bordered={false}\r\n                            pagination={paginationFactory()}\r\n                            selectRow={select}\r\n                            loading={loading}\r\n                            expandRow={expandRow}\r\n                            headerClasses={headerClasses}\r\n                            noDataIndication={loadingIndicator?Loader:<div className={'w-100'}><p>No Data</p></div>}\r\n                            {...unusedprops}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        </ToolkitProvider>\r\n    );\r\n}\r\n","import {\r\n    getShipperAllOrderDetails,\r\n    markHoldItemsApi,\r\n    markItemsForDispatchApi,\r\n    planVehicle,\r\n    planVehicleManuallyButton\r\n} from \"../helpers/api\";\r\nimport history from '../history';\r\nimport { ORDERS_CHANGING, ORDERS_LOADED } from \"./index\";\r\nimport { errorFetchingData, orderLoadedSuccessfully } from \"../helpers/notifications\";\r\n\r\nexport const loadOrders = () => (async (dispatch, getState) => {\r\n    try {\r\n        const orders = await getShipperAllOrderDetails();\r\n        dispatch({ type: ORDERS_LOADED, orders: orders });\r\n        orderLoadedSuccessfully()\r\n    } catch (e) {\r\n        errorFetchingData();\r\n    }\r\n});\r\n\r\n\r\nexport const markOrdersOnHold = (selected, redirect) => (async (dispatch, getState) => {\r\n    const orders = getState().data.orders.data;\r\n    let data = orders.slice();\r\n\r\n    dispatch({ type: ORDERS_CHANGING });\r\n    await markHoldItemsApi(selected);\r\n\r\n    orders.map((item, index) => {\r\n        if (selected.includes(item.id)) {\r\n            data[index].rtd = false;\r\n            data[index].is_dispatched = false;\r\n        }\r\n\r\n        return null;\r\n    });\r\n\r\n    dispatch({ type: ORDERS_LOADED, orders: data });\r\n    redirect('/orders/on-hold');\r\n});\r\n\r\nexport const markOrdersRTD = (selected, redirect) => (async (dispatch, getState) => {\r\n    const orders = getState().data.orders.data;\r\n    let data = orders.slice();\r\n\r\n    dispatch({ type: ORDERS_CHANGING });\r\n    await markItemsForDispatchApi(selected);\r\n\r\n    orders.map((item, index) => {\r\n        if (selected.includes(item.id)) {\r\n            data[index].rtd = true;\r\n            data[index].is_dispatched = false;\r\n        }\r\n\r\n        return null;\r\n    });\r\n\r\n    dispatch({ type: ORDERS_LOADED, orders: data });\r\n    redirect('/orders/ready-to-dispatch')\r\n});\r\n\r\nexport const planVehiclesForOrders = (redirect) => (async (dispatch, getState) => {\r\n    const orders = getState().data.orders.data;\r\n    let data = orders.slice();\r\n\r\n    dispatch({ type: ORDERS_CHANGING });\r\n    await planVehicle();\r\n\r\n    orders.map((item, index) => {\r\n        if (data[index.rtd]) {\r\n            data[index].rtd = false;\r\n            data[index].is_dispatched = true;\r\n        }\r\n\r\n        return null;\r\n    });\r\n\r\n    dispatch({ type: ORDERS_LOADED, orders: data });\r\n    redirect('/dispatcher')\r\n});\r\n\r\nexport const planVehiclesManuallyForOrders = (truckID, selected, noOfTrucks, redirect) => (async (dispatch, getState) => {\r\n    const orders = getState().data.orders.data;\r\n    let data = orders.slice();\r\n\r\n    await dispatch({ type: ORDERS_CHANGING });\r\n    await planVehicleManuallyButton(truckID, selected, noOfTrucks);\r\n\r\n    loadOrders()(dispatch, getState);\r\n\r\n    history.push('/dashboard/dispatcher');\r\n});\r\n","import React from 'react';\r\nimport {Button, Modal} from 'reactstrap';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport {uploadOrders} from \"../helpers/api\";\r\nimport Link from \"react-router-dom/es/Link\";\r\nimport {toast} from \"react-toastify\";\r\nimport { loadOrders } from '../actions/data';\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nfunction Basic(props) {\r\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\r\n\r\n    console.log(acceptedFiles);\r\n\r\n    return (\r\n        <section>\r\n            <div {...getRootProps({className: 'dropzone'})} style={{\r\n                height: '50vh',\r\n                // width: '50vw',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                padding: 20,\r\n                textAlign: 'center'\r\n            }}>\r\n                <div>\r\n                    {acceptedFiles[0] ? (\r\n                        <div>\r\n                            <h5>\r\n                                {acceptedFiles[0].path} ({acceptedFiles[0].size / 1000} Kbytes)\r\n                            </h5>\r\n                            <br/>\r\n\r\n                            <Button color={\"primary\"} size=\"lg\" onClick={async () => {\r\n                                try {\r\n                                    await props.upload(acceptedFiles[0]);\r\n                                    await props.loadOrders();\r\n                                    await props.onClose();\r\n                                    toast.success(\"Upload Successful!\");\r\n                                } catch (e) {\r\n                                    console.log(e);\r\n                                    toast.error(\"Upload failed!\");\r\n                                }\r\n                            }}>\r\n                                <i className={\"icon-cloud-upload\"}/> &nbsp;\r\n                                Upload\r\n                            </Button>\r\n\r\n                            <Link to={'/orders/all'}>\r\n\r\n                            </Link>\r\n                            <Button color={\"error\"} onClick={(e) => props.onClose(e)}>\r\n                                Cancel\r\n                            </Button>\r\n\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <i className={\"icon-cloud-upload\"} style={{fontSize: '5rem'}}/>\r\n                            <br/>\r\n                            <input {...getInputProps()} />\r\n                            <h3>Drag & drop files here, or click to select files</h3>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nclass Upload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            backdrop: true\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.changeBackdrop = this.changeBackdrop.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    changeBackdrop(e) {\r\n        let value = e.target.value;\r\n        if (value !== 'static') {\r\n            value = JSON.parse(value);\r\n        }\r\n        this.setState({backdrop: value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display: 'inline-block'}}>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    className={this.props.className}\r\n                    backdrop={true}\r\n                    style={{\r\n                        padding: 0,\r\n                        height: '50vh',\r\n                        width: '50vw',\r\n                        top: '25%',\r\n                    }}\r\n                >\r\n                    <Basic loadOrders={this.props.loadOrders} upload={this.props.upload} onClose={this.toggle}/>\r\n                </Modal>\r\n                <Button color={\"secondary\"}\r\n                        style={{backgroundColor: 'white'}} onClick={this.toggle}>\r\n                    <i className={\"icon-cloud-upload\"}/> &nbsp;\r\n                    Upload\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null,{ loadOrders })(Upload);\r\n","export const ALL_ORDERS = \"All Items\";\r\nexport const ON_HOLD_ORDERS = \"Items On Hold\";\r\nexport const RTD_ORDERS = \"Ready to Dispatch\";\r\nexport const DISPATCHED_ORDERS = \"Dispatched Items\";\r\n","import React from \"react\";\r\nimport {Badge} from \"reactstrap\";\r\n\r\nfunction formatDate(d) {\r\n    let hrs = d.getHours();\r\n    let mins = d.getMinutes();\r\n    let secs = d. getSeconds();\r\n\r\n    return (\r\n        <span>{ d.getDate() }-{ d.getMonth() + 1 }-{ d.getFullYear() } { (\"0\" + hrs).slice(-2) }:{ (\"0\" + mins).slice(-2) }:{ (\"0\" + secs).slice(-2) }</span>\r\n    )\r\n}\r\n\r\nexport default [{\r\n    dataField: 'Name',\r\n    text: 'Name',\r\n    sort: true\r\n}, {\r\n    dataField: 'pid',\r\n    text: 'SKU ID',\r\n    sort: true\r\n}, {\r\n    dataField: 'Quantity',\r\n    text: 'Quantity',\r\n    sort: true\r\n}, {\r\n    dataField: 'Height',\r\n    text: 'Dimension',\r\n    isDummyField: true,\r\n    formatter: (cell, row) => (<div>\r\n        {row.Length} x {row.Breadth} x {row.Height}\r\n    </div>)\r\n}, {\r\n    dataField: 'Weight',\r\n    text: 'Weight',\r\n    sort: true\r\n}, {\r\n    dataField: 'Volume',\r\n    text: 'Volume',\r\n    sort: true,\r\n}, {\r\n    dataField: 'origin',\r\n    text: 'Origin',\r\n    sort: true\r\n}, {\r\n    dataField: 'destination',\r\n    text: 'Destination',\r\n    sort: true\r\n}, {\r\n    dataField: 'date',\r\n    text: 'Date',\r\n    sort: true,\r\n    formatter: (cell,row) => {\r\n        let d = new Date(row.date);\r\n        return formatDate(d);\r\n    }\r\n}, {\r\n    dataField: 'truck_type',\r\n    text: 'Truck Type',\r\n    isDummyField: true,\r\n    formatExtraData: (row) => {\r\n        if (row.truck_type === \"Open\")\r\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#eb6b56'}}>{row.truck_type}</Badge>);\r\n        else if (row.truck_type === \"Container\")\r\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#3e6787'}}>{row.truck_type}</Badge>);\r\n        else if (row.truck_type === \"Trailer\")\r\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#47b39d'}}>{row.truck_type}</Badge>)\r\n    },\r\n    formatter: (cell, row, rowIndex, formatExtraData) => {\r\n        return formatExtraData(row);\r\n    },\r\n    align: 'center',\r\n}, {\r\n    dataField: 'rtd',\r\n    text: 'Status',\r\n    isDummyField: true,\r\n    formatExtraData: (row) => {\r\n        if (row.is_dispatched)\r\n            return (<Badge color=\"success\" style={{width: '100%'}}>Dispatched</Badge>);\r\n        if (row.rtd)\r\n            return (<Badge color=\"primary\" style={{width: '100%'}}>RTD</Badge>);\r\n\r\n        return (<Badge color=\"warning\" style={{width: '100%'}}>On Hold</Badge>)\r\n    },\r\n    formatter: (cell, row, rowIndex, formatExtraData) => {\r\n        return formatExtraData(row);\r\n    },\r\n    align: 'center',\r\n}];\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n} from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {\r\n    loadOrders,\r\n    markOrdersOnHold,\r\n    markOrdersRTD,\r\n    planVehiclesForOrders,\r\n    planVehiclesManuallyForOrders\r\n} from \"../actions/data\";\r\nimport { connect } from \"react-redux\";\r\nimport { ALL_ORDERS, DISPATCHED_ORDERS, ON_HOLD_ORDERS, RTD_ORDERS } from \"../data/orderTitles\";\r\nimport { refreshing } from \"../helpers/notifications\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport Upload from \"./upload\";\r\nimport DataTable from \"../components/dataTable\";\r\nimport columns from \"../data/columns/orders\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { getStyle } from \"@coreui/coreui/dist/js/coreui-utilities\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { allAvailableTrucks, getKPIData, uploadOrders } from \"../helpers/api\";\r\n\r\n\r\nconst filterData = (data, hold, rtd, dispatched, origin = null, destination = null) => {\r\n    console.log(origin, destination);\r\n\r\n    let xd = [];\r\n    data.map((row) => {\r\n        if (origin || destination) {\r\n            const originMatch = row.origin.toUpperCase() === origin || origin === '-';\r\n            const destinationMatch = row.destination.toUpperCase() === destination || destination === '-';\r\n            if (!(originMatch && destinationMatch))\r\n                return null\r\n        }\r\n\r\n        if (!row.is_dispatched && !row.rtd && hold) {\r\n            xd.push(row);\r\n            return null;\r\n        }\r\n\r\n\r\n        if (row.rtd && !row.is_dispatched && rtd) {\r\n            xd.push(row);\r\n            return null;\r\n        }\r\n\r\n        if (row.is_dispatched && !row.rtd && dispatched) {\r\n            xd.push(row);\r\n            return null;\r\n        }\r\n\r\n\r\n        // if (!row.is_dispatched && !row.rtd) {\r\n        //     console.log(\"0\")\r\n        //     xd.push(row);\r\n        // } if (row.rtd && !row.is_dispatched) {\r\n        //     console.log(\"1\")\r\n        //     xd.push(row);\r\n        // } if (row.is_dispatched && !row.rtd) {\r\n        //     console.log(\"2\")\r\n        //     xd.push(row);\r\n        // }\r\n\r\n        //return null\r\n    });\r\n\r\n\r\n    return xd;\r\n};\r\n\r\nclass OrderTable extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            kpi: [\r\n                { total_time: \"\" },\r\n                { total_trucks: \"\" },\r\n                { total_orders: \"\" },\r\n                { total_orders_planned: \"\" },\r\n                { total_rfq: \"\" },\r\n                { total_bids: \"\" },\r\n                { total_orders_hold: \"\" },\r\n                { total_orders_delayed: \"\" },\r\n                { total_orders_pending: \"\" },\r\n                { total_trucks_assigned: \"\" },\r\n                { total_trucks_in_transit: \"\" },\r\n                { total_weight: \"\" },\r\n                { total_distance: \"\" },\r\n\r\n            ],\r\n            modal: false,\r\n            trucks: [],\r\n            selectedTruck: [],\r\n            truckType: '',\r\n            noOfTrucks: 1,\r\n            originSelected: '-',\r\n            destinationSelected: '-',\r\n            selected: []\r\n        }\r\n    }\r\n\r\n    refPass = (node) => {\r\n        this.tableNode = node;\r\n    };\r\n\r\n    getSelectedData = () => {\r\n        return this.tableNode.selectionContext.selected;\r\n    };\r\n\r\n    async markHold() {\r\n        const selected = this.getSelectedData();\r\n        await this.props.markHold(selected, this.props.history.push);\r\n    }\r\n\r\n    async markRTD() {\r\n        const selected = this.getSelectedData();\r\n        await this.props.markRTD(selected, this.props.history.push);\r\n    }\r\n\r\n    planVehicle() {\r\n        this.props.planVehicle(this.props.history.push);\r\n        // this.props.history.push('/orders/dispatched')\r\n    }\r\n\r\n    planVehicleManually() {\r\n        this.props.planVehicleManually(this.state.selectedTruck, this.getSelectedData(), this.state.noOfTrucks, this.props.history.push);\r\n        // this.props.history.push('/orders/dispatched')\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            const kpi = await getKPIData();\r\n            const trucksData = await allAvailableTrucks();\r\n\r\n            this.setState({\r\n                kpi,\r\n                trucks: trucksData\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n        if (!this.props.loaded)\r\n            this.props.getOrders()\r\n    }\r\n\r\n    modalToggle() {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        })\r\n    }\r\n\r\n    checkOriginDestinationMatch = () => {\r\n\r\n        function search(id, myArray) {\r\n            for (let i = 0; i < myArray.length; i++) {\r\n                if (myArray[i].id === id) {\r\n                    return myArray[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        const keys = this.getSelectedData();\r\n        const data = keys.map(key => search(key, this.props.orders));\r\n\r\n        let isValid = true;\r\n\r\n        for (let i = 0; i < (data.length - 1); i++) {\r\n            if (data[i].origin !== data[i + 1].origin || data[i].destination !== data[i + 1].destination) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    checkTruckTypeMatch = () => {\r\n\r\n        function search(id, myArray) {\r\n            for (let i = 0; i < myArray.length; i++) {\r\n                if (myArray[i].id === id) {\r\n                    return myArray[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        const keys = this.getSelectedData();\r\n        const data = keys.map(key => search(key, this.props.orders));\r\n\r\n        let isValid = true;\r\n\r\n        for (let i = 0; i < (data.length - 1); i++) {\r\n            if (data[i].truck_type !== data[i + 1].truck_type) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n\r\n    handleOnSelect = (row, isSelect) => {\r\n        if (isSelect) {\r\n            this.setState(() => ({\r\n                selected: [...this.state.selected, row.id]\r\n            }));\r\n        } else {\r\n            this.setState(() => ({\r\n                selected: this.state.selected.filter(x => x !== row.id)\r\n            }));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    handleOnSelectAll = (isSelect, rows) => {\r\n        const ids = rows.map(r => r.id);\r\n        if (isSelect) {\r\n            this.setState(() => ({\r\n                selected: ids\r\n            }));\r\n        } else {\r\n            this.setState(() => ({\r\n                selected: []\r\n            }));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            orders = [],\r\n            title,\r\n            rtd = false,\r\n            hold = false,\r\n            dispatched = false,\r\n            loading,\r\n            loaded,\r\n            getOrders,\r\n            changing,\r\n            props\r\n        } = this.props;\r\n\r\n        console.log(\"RTD: \", rtd)\r\n        console.log(\"Hold: \", hold)\r\n        console.log(\"Dispatched: \", dispatched)\r\n\r\n        const sparkLineChartData = [\r\n            {\r\n                data: [35, 23, 56, 22, 97, 23, 64],\r\n                label: 'New Clients',\r\n            },\r\n            {\r\n                data: [65, 59, 84, 84, 51, 55, 40],\r\n                label: 'Recurring Clients',\r\n            },\r\n            {\r\n                data: [35, 23, 56, 22, 97, 23, 64],\r\n                label: 'Pageviews',\r\n            },\r\n            {\r\n                data: [65, 59, 84, 84, 51, 55, 40],\r\n                label: 'Organic',\r\n            },\r\n            {\r\n                data: [78, 81, 80, 45, 34, 12, 40],\r\n                label: 'CTR',\r\n            },\r\n            {\r\n                data: [1, 13, 9, 17, 34, 41, 38],\r\n                label: 'Bounce Rate',\r\n            },\r\n        ];\r\n        const brandPrimary = getStyle('--primary');\r\n        const brandDanger = getStyle('--danger');\r\n        const sparklineChartOpts = {\r\n            tooltips: {\r\n                enabled: false,\r\n                // custom: CustomTooltips\r\n            },\r\n            responsive: true,\r\n            maintainAspectRatio: true,\r\n            scales: {\r\n                xAxes: [\r\n                    {\r\n                        display: false,\r\n                    }],\r\n                yAxes: [\r\n                    {\r\n                        display: false,\r\n                    }],\r\n            },\r\n            elements: {\r\n                line: {\r\n                    borderWidth: 2,\r\n                },\r\n                point: {\r\n                    radius: 0,\r\n                    hitRadius: 10,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 3,\r\n                },\r\n            },\r\n            legend: {\r\n                display: false,\r\n            },\r\n        };\r\n\r\n        const makeSparkLineData = (dataSetNo, variant) => {\r\n            const dataset = sparkLineChartData[dataSetNo];\r\n            const data = {\r\n                labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n                datasets: [\r\n                    {\r\n                        backgroundColor: 'transparent',\r\n                        borderColor: variant ? variant : '#c2cfd6',\r\n                        data: dataset.data,\r\n                        label: dataset.label,\r\n                    },\r\n                ],\r\n            };\r\n            return () => data;\r\n        };\r\n\r\n        const leftButtons = (props) => (\r\n            <div style={{ display: 'inline-block' }}>\r\n                <ButtonGroup>\r\n                    <Button color={\"warning\"}\r\n                        onClick={this.markHold.bind(this)}\r\n                        disabled={title === ON_HOLD_ORDERS}>\r\n                        &nbsp;\r\n                       Mark Hold\r\n                    </Button>\r\n\r\n                    <Button color=\"primary\"\r\n                        onClick={this.markRTD.bind(this)}\r\n                        disabled={title === RTD_ORDERS}>\r\n                        <i className={\"fa fa-share\"} /> &nbsp;\r\n                        Ready to Dispatch\r\n                    </Button>\r\n                </ButtonGroup>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <ButtonGroup>\r\n                    {title === RTD_ORDERS ? <Button color={\"success\"}\r\n                        onClick={this.planVehicle.bind(this)}\r\n                        disabled={title === DISPATCHED_ORDERS}>\r\n                        <i className={\"fa fa-rocket\"} /> &nbsp;\r\n                        Auto-dispatch\r\n                    </Button> : null}\r\n                    &nbsp;\r\n                    {title === RTD_ORDERS ? <Button color={\"success\"}\r\n                        onClick={() => {\r\n                            this.setState({ truckType: \"open\" })\r\n                            this.modalToggle();\r\n                        }}\r\n                        disabled={title === DISPATCHED_ORDERS}>\r\n                        {/*<i className={\"fa fa-rocket\"}/> &nbsp;*/}\r\n                        Manual-dispatch\r\n                    </Button> : null}\r\n                </ButtonGroup>\r\n            </div>\r\n        );\r\n\r\n        const rightButtons = (props) => (\r\n            <div style={{ display: 'inline-block' }}>\r\n                {title === ALL_ORDERS ? <Upload upload={uploadOrders} /> : null}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n                <Button color={\"link\"} onClick={() => {\r\n                    refreshing();\r\n                    getOrders();\r\n                }}>\r\n                    <i className={\"fa fa-refresh\"} /> &nbsp;\r\n                    Refresh\r\n                </Button>\r\n            </div>\r\n        );\r\n\r\n        const vehiclePickerModal = (\r\n            <Modal isOpen={this.state.modal} toggle={this.modalToggle.bind(this)} className={this.props.className}>\r\n                <ModalHeader toggle={this.toggle}>Select Truck</ModalHeader>\r\n                <ModalBody>\r\n                    {this.tableNode ? ((this.checkOriginDestinationMatch() && this.checkTruckTypeMatch()) ? (\r\n                        <div>\r\n                            <h1>Select truck</h1>\r\n                            <br />\r\n\r\n                            <label htmlFor=\"truck-type\">Truck Type</label>\r\n                            <Input type=\"select\" name=\"truck-type\" id=\"truck-type\" onChange={(e) => {\r\n                                this.setState({\r\n                                    truckType: e.target.value\r\n                                })\r\n                            }}>\r\n                                <option value=\"open\">Open</option>\r\n                                <option value=\"container\">Container</option>\r\n                                <option value=\"trailer\">Trailer</option>\r\n                            </Input>\r\n                            <br />\r\n                            <label htmlFor=\"truck\">Truck</label>\r\n                            <Input type=\"select\" name=\"truck\" id=\"truck\" onChange={(e) => {\r\n                                this.setState({\r\n                                    selectedTruck: e.target.value\r\n                                })\r\n                            }}>\r\n                                <option disabled selected>---- Select ---</option>\r\n                                {\r\n                                    _.uniqBy(this.state.trucks, 'display_name').map(truck => {\r\n                                        if (truck.Category.toUpperCase() === this.state.truckType.toUpperCase()) {\r\n                                            return <option value={truck.id}>{truck.display_name}</option>\r\n                                        }\r\n                                    })\r\n                                }\r\n                            </Input>\r\n                            <br />\r\n                            <label>No of Trucks</label><br />\r\n                            <ButtonGroup>\r\n                                <Button color=\"primary\" onClick={() => {\r\n                                    if (this.state.noOfTrucks > 1)\r\n                                        this.setState(p => {\r\n                                            return { noOfTrucks: p.noOfTrucks - 1 }\r\n                                        })\r\n                                }}>\r\n                                    <FontAwesomeIcon icon={faMinus} />\r\n                                </Button>\r\n                                <Button color=\"light\">{this.state.noOfTrucks}</Button>\r\n                                <Button color=\"primary\" onClick={() => {\r\n                                    this.setState(p => {\r\n                                        return { noOfTrucks: p.noOfTrucks + 1 }\r\n                                    })\r\n                                }}>\r\n                                    <FontAwesomeIcon icon={faPlus} />\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </div>\r\n                    ) : (\r\n                            <div>\r\n                                <h1>\r\n                                    Please Reselect Items.\r\n                            </h1>\r\n                                Origin-Destination of all Items doesn't match OR Truck types are not same!\r\n                        </div>\r\n                        )) : \"Data Not Loaded\"}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"success\" onClick={this.planVehicleManually.bind(this)}\r\n                        disabled={this.state.selectedTruck === null && this.tableNode && this.checkOriginDestinationMatch()}>\r\n                        PACKITEMS\r\n                    </Button>{' '}\r\n                    <Button color=\"secondary\" onClick={this.modalToggle.bind(this)}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        );\r\n\r\n        const section = (\r\n            <div>\r\n                <Form>\r\n                    <Row form>\r\n                        <Col md={2}>\r\n                            <Input\r\n                                type=\"select\"\r\n                                onChange={(e) => this.setState({\r\n                                    originSelected: e.target.value\r\n                                })}>\r\n                                <option selected value={'-'}>----- Origin -----</option>\r\n                                {\r\n                                    orders.map(item => item.origin)\r\n                                        .filter((value, index, self) => self.indexOf(value) === index)\r\n                                        .map(item => <option value={item.toUpperCase()}>{item}</option>)\r\n                                }\r\n                            </Input>\r\n                        </Col>\r\n                        <Col md={1} style={{ textAlign: 'center' }}>\r\n                            to\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <Input type=\"select\"\r\n                                onChange={(e) => this.setState({\r\n                                    destinationSelected: e.target.value\r\n                                })}>\r\n                                <option selected value={'-'}>----- Destination -----</option>\r\n                                {\r\n                                    orders.map(item => item.destination)\r\n                                        .filter((value, index, self) => self.indexOf(value) === index)\r\n                                        .map(item => <option value={item.toUpperCase()}>{item}</option>)\r\n                                }\r\n                            </Input>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            (\r\n                <div>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <i className=\"fa fa-align-justify\" />{title}\r\n                            <Row>\r\n                                <Col sm=\"3\">\r\n                                    <div className=\"callout callout-info\">\r\n                                        <small className=\"text-muted\">Total Orders</small>\r\n                                        <br />\r\n                                        {\r\n                                            this.state.kpi.map(item => (\r\n                                                <strong className=\"h4\">{item.total_orders}</strong>\r\n                                            ))}\r\n\r\n                                        <div className=\"chart-wrapper\">\r\n                                            <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts}\r\n                                                width={100} height={30} />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col sm=\"3\">\r\n                                    <div className=\"callout callout-danger\">\r\n                                        <small className=\"text-muted\">Planned Orders</small>\r\n                                        <br />\r\n                                        {\r\n                                            this.state.kpi.map(item => (\r\n                                                <strong className=\"h4\">{item.total_orders_planned}</strong>\r\n                                            ))}\r\n                                        <div className=\"chart-wrapper\">\r\n                                            <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\r\n                                                width={100} height={30} />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n\r\n                                <Col sm=\"3\">\r\n                                    <div className=\"callout callout-info\">\r\n                                        <small className=\"text-muted\">Pending Orders</small>\r\n                                        <br />\r\n                                        {\r\n                                            this.state.kpi.map(item => (\r\n                                                <strong className=\"h4\">{item.total_orders_pending}</strong>\r\n                                            ))}\r\n                                        <div className=\"chart-wrapper\">\r\n                                            <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts}\r\n                                                width={100} height={30} />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n                                <Col sm=\"3\">\r\n                                    <div className=\"callout callout-danger\">\r\n                                        <small className=\"text-muted\">Delayed Orders</small>\r\n                                        <br />\r\n                                        {\r\n                                            this.state.kpi.map(item => (\r\n                                                <strong className=\"h4\">{item.total_orders_delayed}</strong>\r\n                                            ))}\r\n                                        <div className=\"chart-wrapper\">\r\n                                            <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\r\n                                                width={100} height={30} />\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n\r\n\r\n\r\n                            </Row>\r\n                            <small className=\"text-muted\" />\r\n                            <span style={{ float: 'right' }}>\r\n                                {changing ? <BeatLoader /> : null}\r\n\r\n                            </span>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/#/dashboard/orders\"\r\n                                        active={title === ALL_ORDERS}>{ALL_ORDERS}</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/#/dashboard/orders/on-hold\"\r\n                                        active={title === ON_HOLD_ORDERS}>{ON_HOLD_ORDERS}</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/#/dashboard/orders/ready-to-dispatch\"\r\n                                        active={title === RTD_ORDERS}>{RTD_ORDERS}</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink href=\"/#/dashboard/orders/dispatched\"\r\n                                        active={title === DISPATCHED_ORDERS}>{DISPATCHED_ORDERS}</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <DataTable\r\n                                data={filterData(orders, hold, rtd, dispatched, this.state.originSelected, this.state.destinationSelected)}\r\n                                loading={loading}\r\n                                loaded={loaded}\r\n                                columns={columns}\r\n                                right={rightButtons}\r\n                                left={leftButtons}\r\n                                keyField={\"id\"}\r\n                                select={{\r\n                                    mode: \"checkbox\", selected: this.state.selected, onSelect: this.handleOnSelect,\r\n                                    onSelectAll: this.handleOnSelectAll, clickToSelect: true,\r\n                                }}\r\n                                refPass={this.refPass.bind(this)}\r\n                                section={section}\r\n                                {...props}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                    {vehiclePickerModal}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loading: state.data.orders.loading,\r\n    loaded: state.data.orders.loaded,\r\n    changing: state.data.orders.changing,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getOrders: () => dispatch(loadOrders()),\r\n    markHold: (selected, redirect) => dispatch(markOrdersOnHold(selected, redirect)),\r\n    markRTD: (selected, redirect) => dispatch(markOrdersRTD(selected, redirect)),\r\n    planVehicle: (redirect) => dispatch(planVehiclesForOrders(redirect)),\r\n    planVehicleManually: (truckID, selected, redirect) => dispatch(planVehiclesManuallyForOrders(truckID, selected, redirect))\r\n});\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderTable));\r\n","import React from 'react';\r\nimport OrderTable from \"../../../components/orderTable\";\r\nimport { DISPATCHED_ORDERS } from \"../../../data/orderTitles\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst DispatchedOrdersScreen = (props) => {\r\n    return (\r\n        <OrderTable title={DISPATCHED_ORDERS} orders={props.orders} dispatched={true} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    orders: state.data.orders.data\r\n});\r\n\r\nexport default connect(mapStateToProps)(DispatchedOrdersScreen);\r\n"],"sourceRoot":""}