{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/CardFooter.js","screens/shipper/forms/editProfile.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","a","node","row","bool","check","inline","disabled","tag","className","string","cssModule","object","FormGroup","props","Tag","attributes","classes","createElement","defaultProps","__webpack_exports__","lodash_isobject__WEBPACK_IMPORTED_MODULE_5__","lodash_isobject__WEBPACK_IMPORTED_MODULE_5___default","_utils__WEBPACK_IMPORTED_MODULE_6__","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","hidden","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","columnProp","colClass","_classNames","colSizeInterfix","push","length","CardFooter","optionsData","_useState","useState","shipper_fname","shipper_lname","shipper_email","shipper_company_name","shipper_gst","shipper_number","shipper_address","shipper_street","shipper_city","shipper_pin","shipper_state","industry","age_company","dispatch","frequency","geograph","mode_transport","type","need","use","buy_methods","designations","edu","ages","attitudes","objective","_useState2","_home_ashertoufeeq_Desktop_Yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","ProfileForm","setForm","_useState3","_useState4","phase","setPhase","useEffect","_ref","_home_ashertoufeeq_Desktop_Yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_ashertoufeeq_Desktop_Yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","data","wrap","_context","prev","next","getShipperProfileDetails","sent","stop","apply","this","arguments","getNetwork","handleInputChange","event","target","value","checked","name","_objectSpread","_home_ashertoufeeq_Desktop_Yantraksh_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","handleSubmit","_ref2","_callee2","_context2","preventDefault","editProfileShipper","profileUpdatedSuccess","t0","alert","JSON","stringify","_x","renderOptions","map","o","react__WEBPACK_IMPORTED_MODULE_4___default","key","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","method","onSubmit","console","log","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","form","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","id","placeholder","onChange","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","color","class","role","aria-hidden","onClick"],"mappings":"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Y,EAAA,wbCfAA,EAAA,mBAEX,IAAMoC,EACQ,CACN,oCACA,cACA,kBACA,WACA,UACA,SACA,oBACA,YACA,yBACA,gCACA,qBACA,OACA,qBACA,iBACA,YACA,YACA,gBACA,0BACA,oBACA,cACA,kBACA,QACA,QACA,WACA,cACA,mBACA,SACA,QACA,yBACA,WACA,QACA,qBACA,WACA,2BAnCFA,EAqCW,CACT,qBACA,YACA,aACA,cACA,aA1CFA,EA4CQ,CACN,kBACA,oBACA,qBACA,sBACA,cAjDFA,EAmDS,CACP,QACA,SACA,UACA,4BAvDFA,EAyDI,CACF,MACA,UACA,UACA,WACA,SA9DFA,EAgEQ,CACN,gBACA,iBAlEFA,EAoEc,CACZ,UACA,kBACA,mBAvEFA,EAyEI,CACF,aACA,aACA,cACA,cA7EFA,EA+EI,CACF,sBACA,gCACA,wCACA,oBACA,OApFFA,EAsFG,CACD,eACA,mCACA,sBACA,yBA1FFA,EA4FW,CACT,yBACA,UACA,cACA,SACA,sBAjGFA,EAmGY,CACV,8CACA,uCACA,aAtGFA,EAwGG,CACD,WACA,UACA,8BA3GFA,EA6GI,CACF,iBACA,iBACA,cAhHFA,EAkHS,CACP,kBACA,qBACA,oBACA,eAtHFA,EAwHS,CACP,qCACA,wBACA,4BACA,kCA9HSC,EAkIcC,mBAAS,CACpCC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,qBAAsB,GACtBC,YAAa,GACbC,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,GAChBC,aAAc,GACdC,YAAa,GACbC,cAAe,GAEfC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,UAAW,GACX5C,KAAM,GACN6C,SAAU,GACVC,eAAgB,GAChBC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,YAAa,GACbC,aAAc,GACdC,IAAK,GACLC,KAAM,GACNC,UAAW,GACXC,UAAW,KA9JEC,EAAAtG,OAAAuG,EAAA,EAAAvG,CAAA0E,EAAA,GAkIV8B,EAlIUF,EAAA,GAkIGG,EAlIHH,EAAA,GAAAI,EAiKS/B,mBAAS,GAjKlBgC,EAAA3G,OAAA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","file":"static/js/23.ee72df56.chunk.js","sourcesContent":["module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isobject from 'lodash.isobject';\nimport { mapToCssModules, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import React, { useState, useEffect } from \"react\";\nimport {\n    Button, Card,\n    CardBody, CardTitle,\n    CardFooter,\n    CardHeader, Col, Form,\n    FormGroup, Input,\n    Label, Row, Container,\n} from 'reactstrap';\nimport _ from 'lodash';\nimport { editProfileShipper, getShipperProfileDetails } from \"../../../helpers/api\";\nimport { profileUpdatedSuccess } from \"../../../helpers/notifications\";\n\n\nexport default () => {\n\n    const optionsData = {\n        industry: [\n            'AGRICULTURE AND ALLIED INDUSTRIES',\n            'AUTOMOBILES',\n            'AUTO COMPONENTS',\n            'AVIATION',\n            'BANKING',\n            'CEMENT',\n            'CONSUMER DURABLES',\n            'ECOMMERCE',\n            'EDUCATION AND TRAINING',\n            'ENGINEERING AND CAPITAL GOODS',\n            'FINANCIAL SERVICES',\n            'FMCG',\n            'GEMS AND JEWELLERY',\n            'INFRASTRUCTURE',\n            'INSURANCE',\n            'IT & ITES',\n            'MANUFACTURING',\n            'MEDIA AND ENTERTAINMENT',\n            'METALS AND MINING',\n            'OIL AND GAS',\n            'PHARMACEUTICALS',\n            'PORTS',\n            'POWER',\n            'RAILWAYS',\n            'REAL ESTATE',\n            'RENEWABLE ENERGY',\n            'RETAIL',\n            'ROADS',\n            'SCIENCE AND TECHNOLOGY',\n            'SERVICES',\n            'STEEL',\n            'TELECOMMUNICATIONS',\n            'TEXTILES',\n            'TOURISM AND HOSPITALITY',\n        ],\n        age_company: [\n            'Less than one year',\n            '1-3 Years',\n            '3-10 Years',\n            '11-25 Years',\n            '25+ Years',\n        ],\n        dispatch: [\n            '7 Ton to 50 Ton',\n            '51 Ton to 100 Ton',\n            '101 Ton to 500 Ton',\n            '501 Ton to 3000 Ton',\n            '3000 Ton +',\n        ],\n        frequency: [\n            'Daily',\n            'Weekly',\n            'Monthly',\n            'Project based (Variable)',\n        ],\n        size: [\n            '1-9',\n            '10 - 50',\n            '51- 200',\n            '201- 500',\n            '500 +',\n        ],\n        geograph: [\n            'Tier 1 cities',\n            'Tier 2 cities',\n        ],\n        mode_transport: [\n            'Courier',\n            'Part Truck Load',\n            'Full Truck Load',\n        ],\n        type: [\n            'Intra city',\n            'Inter city',\n            'Intra state',\n            'Interstate',\n        ],\n        need: [\n            'Market vendors/ 3PL',\n            'Logistics Management Software',\n            'Logistics Optimization and Automation',\n            'Invoice factoring',\n            'LTL',\n        ],\n        use: [\n            'Spreadsheets',\n            'Transportation Management system',\n            '3rd Party Logistics',\n            'Emails, Sms and calls',\n        ],\n        buy_methods: [\n            'Monthly Rate contracts',\n            'Tenders',\n            'Spot Market',\n            'To pay',\n            'Online Marketplace',\n        ],\n        designations: [\n            'Sr Mgmt. (Diredtor, MD, CEO, Dpt Head, etc)',\n            'Mid Mgmt, (Logistics, Dispatch, etc)',\n            'Executive',\n        ],\n        edu: [\n            'Graduate',\n            'Masters',\n            'Professional Certification',\n        ],\n        ages: [\n            '24 to 30 Years',\n            '31 to 45 Years',\n            '45 Years +',\n        ],\n        attitudes: [\n            'Price sensitive',\n            'Delivery Sensitive',\n            'Quality Sensitive',\n            'Tech Driven',\n        ],\n        objective: [\n            'Reduce and control Logistics costs',\n            'End to end visibility',\n            'Maximise Fleet Efficiency',\n            'Minimise Damages and Shortages'\n        ],\n    }\n\n    const [ProfileForm, setForm] = useState({\n        shipper_fname: '',\n        shipper_lname: '',\n        shipper_email: '',\n        shipper_company_name: '',\n        shipper_gst: '',\n        shipper_number: '',\n        shipper_address: '',\n        shipper_street: '',\n        shipper_city: '',\n        shipper_pin: '',\n        shipper_state: '',\n\n        industry: '',\n        age_company: '',\n        dispatch: '',\n        frequency: '',\n        size: '',\n        geograph: '',\n        mode_transport: '',\n        type: '',\n        need: '',\n        use: '',\n        buy_methods: '',\n        designations: '',\n        edu: '',\n        ages: '',\n        attitudes: '',\n        objective: '',\n    });\n\n    const [phase, setPhase] = useState(0);\n\n    useEffect(() => {\n        const getNetwork = async () => {\n            const data = await getShipperProfileDetails();\n            setForm(data);\n            //console.log(ProfileForm);\n        };\n        getNetwork();\n    }, [setForm]);\n\n\n    const handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        setForm({\n            ...ProfileForm,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setPhase(1);\n        try {\n            await editProfileShipper(ProfileForm);\n            profileUpdatedSuccess();\n        } catch (e) {\n            alert(JSON.stringify(e));\n        }\n        setPhase(1);\n    };\n\n    const btnLoader = () => {\n        if (phase === 1) {\n            return (\n                <Button color=\"primary\" size=\"lg\" disabled>\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving\n                </Button>\n            )\n        }\n        return <Button color=\"primary\" size=\"lg\" onClick={handleSubmit}>Save</Button>\n    }\n\n    const renderOptions = data => {\n        return data.map(o => {\n            return <option key={o} value={o}>{o}</option>;\n        });\n    }\n\n    return (\n\n        <Card>\n            <CardBody>\n                <Form method={'patch'} onSubmit={handleSubmit}>\n                    {console.log(ProfileForm)}\n                    <CardTitle><h5 className=\"mb-4\">Personal Details</h5></CardTitle>\n                    <FormGroup row className=\"my-0\">\n                        <Col md=\"6\" form>\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_fname\">First Name</Label>\n                                <Input type=\"text\" id=\"shipper_fname\" placeholder=\"First Name\"\n                                    name={\"shipper_fname\"}\n                                    value={ProfileForm.shipper_fname} onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_lname\">Last Name</Label>\n                                <Input type=\"text\" placeholder=\"Last Name\" id=\"shipper_lname\" name={\"shipper_lname\"}\n                                    value={ProfileForm.shipper_lname}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className=\"my-0\">\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_email\">Email Address</Label>\n                                <Input type=\"text\" id=\"shipper_email\" placeholder=\"Enter your Email\"\n                                    name={\"shipper_email\"}\n                                    value={ProfileForm.shipper_email}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className=\"my-0\">\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label htmlFor=\"ages\">Age</Label>\n                                <Input type=\"select\" id=\"ages\"\n                                    name={\"ages\"}\n                                    value={ProfileForm.ages}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.ages)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label htmlFor=\"edu\">Education</Label>\n                                <Input type=\"select\" id=\"edu\"\n                                    name={\"edu\"}\n                                    value={ProfileForm.edu}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.edu)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className=\"my-0\">\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_gst\">GST</Label>\n                                <Input type=\"text\" placeholder=\"Enter your GST\"\n                                    name={\"shipper_gst\"}\n                                    id=\"shipper_gst\" value={ProfileForm.shipper_gst}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n\n                    <hr />\n\n                    <CardTitle><h5 className=\"my-4\">Company Details</h5></CardTitle>\n                    <FormGroup row className=\"my-0\">\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_company_name\">Company Name</Label>\n                                <Input type=\"text\" placeholder=\"Company Name\" id=\"shipper_company_name\"\n                                    name={\"shipper_company_name\"}\n                                    value={ProfileForm.shipper_company_name}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md=\"6\">\n                            <FormGroup>\n                                <Label htmlFor=\"age_company\">Company Age</Label>\n                                <Input type=\"select\" id=\"age_company\"\n                                    name={\"age_company\"}\n                                    value={ProfileForm.age_company}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.age_company)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n\n                    <hr />\n\n                    <CardTitle><h5 className=\"my-4\">Address Details</h5></CardTitle>\n                    <FormGroup row className=\"my-0\">\n                        <Col>\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_street\">Street</Label>\n                                <Input type=\"text\" placeholder=\"Street\"\n                                    name={\"shipper_street\"}\n                                    id=\"shipper_street\" value={ProfileForm.shipper_street}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n                    <FormGroup row className=\"my-0\">\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_city\">City</Label>\n                                <Input type=\"text\" placeholder=\"City\"\n                                    name={\"shipper_city\"}\n                                    id=\"shipper_city\" value={ProfileForm.shipper_city}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_state\">State</Label>\n                                <Input type=\"text\" placeholder=\"State\"\n                                    name={\"shipper_state\"}\n                                    id=\"shipper_state\" value={ProfileForm.shipper_state}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"shipper_pin\">Pin Code</Label>\n                                <Input type=\"text\" placeholder=\"Pin Code\"\n                                    name={\"shipper_pin\"}\n                                    id=\"shipper_pin\" value={ProfileForm.shipper_pin}\n                                    onChange={handleInputChange} />\n                            </FormGroup>\n                        </Col>\n                    </FormGroup>\n\n                    <CardTitle><h5 className=\"my-4\">Other Details</h5></CardTitle>\n                    <FormGroup row className=\"my-0\">\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"industry\">Industry</Label>\n                                <Input type=\"select\" id=\"industry\"\n                                    name={\"industry\"}\n                                    value={ProfileForm.industry}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.industry)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"dispatch\">Monthly Dispatch</Label>\n                                <Input type=\"select\" id=\"dispatch\"\n                                    name={\"dispatch\"}\n                                    value={ProfileForm.dispatch}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.dispatch)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"frequency\">Frequency</Label>\n                                <Input type=\"select\" id=\"frequency\"\n                                    name={\"frequency\"}\n                                    value={ProfileForm.frequency}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.frequency)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"size\">Employee Size</Label>\n                                <Input type=\"select\" id=\"size\"\n                                    name={\"size\"}\n                                    value={ProfileForm.size}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.size)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"geograph\">Geographic</Label>\n                                <Input type=\"select\" id=\"geograph\"\n                                    name={\"geograph\"}\n                                    value={ProfileForm.geograph}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.geograph)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"mode_transport\">Transport Mode</Label>\n                                <Input type=\"select\" id=\"mode_transport\"\n                                    name={\"mode_transport\"}\n                                    value={ProfileForm.mode_transport}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.mode_transport)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"type\">Type</Label>\n                                <Input type=\"select\" id=\"type\"\n                                    name={\"type\"}\n                                    value={ProfileForm.type}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.type)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"need\">Need</Label>\n                                <Input type=\"select\" id=\"need\"\n                                    name={\"need\"}\n                                    value={ProfileForm.need}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.need)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"use\">Use</Label>\n                                <Input type=\"select\" id=\"use\"\n                                    name={\"use\"}\n                                    value={ProfileForm.use}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.use)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"buy_methods\">Buy Methods</Label>\n                                <Input type=\"select\" id=\"buy_methods\"\n                                    name={\"buy_methods\"}\n                                    value={ProfileForm.buy_methods}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.buy_methods)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"designations\">Designations</Label>\n                                <Input type=\"select\" id=\"designations\"\n                                    name={\"designations\"}\n                                    value={ProfileForm.designations}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.designations)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"attitudes\">Attitudes</Label>\n                                <Input type=\"select\" id=\"attitudes\"\n                                    name={\"attitudes\"}\n                                    value={ProfileForm.attitudes}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.attitudes)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={4}>\n                            <FormGroup>\n                                <Label htmlFor=\"objective\">Objective</Label>\n                                <Input type=\"select\" id=\"objective\"\n                                    name={\"objective\"}\n                                    value={ProfileForm.objective}\n                                    onChange={handleInputChange}>\n                                    {renderOptions(optionsData.objective)}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        {/* <Col>\n                            <Label>Supplier Type</Label>\n                            {renderSupTypeChecks()}\n                        </Col> */}\n                    </FormGroup>\n\n                </Form>\n            </CardBody>\n            <CardFooter>\n                {btnLoader()}\n            </CardFooter>\n        </Card>\n\n\n    );\n}\n\n"],"sourceRoot":""}