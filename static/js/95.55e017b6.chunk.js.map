{"version":3,"sources":["screens/signUpScreenShipper.js","screens/supplier/signUpScreen.js"],"names":["USERNAME_REGEX","SignUpScreenSupplier","props","_this","Object","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","signUpLoadingButton","state","phase","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","block","disabled","class","role","aria-hidden","handleChange","event","target","value","type","checked","name","setState","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","onSubmit","_ref","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_Desktop_yantraksh_xxx_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","e","errors","data","_this$state","username","email","password","company_code","company_name","wrap","_context","prev","next","preventDefault","match","toast","error","isUsernameAvailable","sent","available","push","concat","confirmpass","length","join","signUpUserSupplier","userCreateSuccess","signInAction","t0","userCreateFailed","console","log","signUpUserShipper","t1","stop","_x","apply","arguments","companiesList","_this2","getCompanyShipper","CREATE_ACCOUNT_SHIPPER","then","result","catch","CREATE_ACCOUNT_SUPPLIER","_this3","isAuthenticated","react_router_es_Redirect__WEBPACK_IMPORTED_MODULE_25__","to","redirectTo","split","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","md","lg","xl","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_18__","placeholder","onChange","htmlFor","id","selected","map","element","key","confPass","reactstrap__WEBPACK_IMPORTED_MODULE_19__","Component","connect","auth","authenticated","navigation","dispatch","signIn","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_signUpScreenShipper__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/95.55e017b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    Col,\n    Container,\n    Form,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupText,\n    Row\n} from 'reactstrap';\n\nimport {\n    isUsernameAvailable,\n    signUpUserShipper,\n    signUpUserSupplier,\n    getCompanyShipper,\n    CREATE_ACCOUNT_SUPPLIER, CREATE_ACCOUNT_SHIPPER\n} from \"../helpers/api\";\nimport { userCreateSuccess, userCreateFailed } from '../helpers/notifications';\nimport { toast } from \"react-toastify\";\nimport { signIn } from \"../actions/auth\";\nimport { connect } from \"react-redux\";\nimport Redirect from \"react-router/es/Redirect\";\n\n// const NAME_REGEX = '^[A-Z a-z]';\nconst USERNAME_REGEX = '^[\\\\w.@+-]+$';\n\n// const PASSWORD_REGEX = '^.{6}.+$';\n\nclass SignUpScreenSupplier extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmpass: '',\n            company_code: '',\n            company_name: '',\n            companiesList: [],\n            phase: 0,\n        };\n    }\n\n\n    signUpLoadingButton = () => {\n        if (this.state.phase === 1) {\n            return (\n                <Button color=\"success\" block disabled>\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Loading\n                </Button>\n            );\n        }\n\n        return <Button color=\"success\" block>Create Account</Button>;\n    }\n\n    handleChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        })\n    };\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        this.setState({ phase: 1 })\n        let errors = [];\n\n        // if (!this.state.first_name)\n        //     errors.push('Name is not valid.');\n        //\n        // if (!this.state.password.match(PASSWORD_REGEX))\n        //     errors.push('Password not valid');\n\n        if (!this.state.username.match(USERNAME_REGEX)) {\n            toast.error(\"Username not valid\");\n            this.setState({ phase: 0 })\n        } else {\n            const data = await isUsernameAvailable(this.state.username);\n            if (!data.available) {\n                errors.push(`Username '${data.username}' not available`);\n                this.setState({ phase: 0 })\n            }\n        }\n        if (this.state.confirmpass !== this.state.password) {\n            errors.push('Password and confirm password is not same');\n            this.setState({ phase: 0 })\n        }\n        if (errors.length !== 0) {\n            toast.error(errors.join('\\n'));\n            this.setState({ phase: 0 })\n        } else {\n            if (this.props.type === \"Supplier\") {\n                try {\n                    await signUpUserSupplier(this.state);\n                    userCreateSuccess(\"Supplier\");\n                    await this.setState({ phase: 0 })\n                    this.props.signInAction(this.state.username, this.state.password)\n                } catch (e) {\n                    userCreateFailed();\n                    console.log(e)\n                }\n            }\n            if (this.props.type === \"Shipper\") {\n                try {\n                    const { username, email, password, company_code, company_name } = this.state;\n                    await signUpUserShipper({\n                        username: username,\n                        email: email,\n                        password: password,\n                        company_name: company_name,\n                        company_code: company_code\n                    });\n                    userCreateSuccess(\"Shipper\");\n                    await this.setState({ phase: 0 })\n                    this.props.signInAction(this.state.username, this.state.password)\n                } catch (e) {\n                    userCreateFailed();\n                    console.log(e)\n                }\n            }\n            this.setState({ phase: 0 })\n        }\n    };\n\n    componentDidMount() {\n        if (this.props.type === \"Shipper\") {\n            getCompanyShipper(CREATE_ACCOUNT_SHIPPER)\n                .then((result) => {\n                    this.setState({ companiesList: result })\n                })\n                .catch(e => console.log(e))\n        } else if (this.props.type === \"Supplier\") {\n            getCompanyShipper(CREATE_ACCOUNT_SUPPLIER)\n                .then((result) => {\n                    this.setState({ companiesList: result })\n                })\n                .catch(e => console.log(e))\n        }\n    }\n\n    render() {\n        const { companiesList } = this.state;\n        if (this.props.isAuthenticated)\n            return <Redirect to={`${this.props.redirectTo.split('#')[1]}`} />;\n        return (\n            <div className=\"app flex-row align-items-center\">\n                <Container>\n                    <Row className=\"justify-content-center\">\n                        <Col md=\"9\" lg=\"7\" xl=\"6\">\n                            <Card className=\"mx-4\">\n                                <CardBody className=\"p-4\">\n                                    <Form onSubmit={this.onSubmit}>\n                                        <input type=\"hidden\" className={\"form-control\"} name=\"user-type\"\n                                            value={this.props.type} />\n                                        <h1>Register for {this.props.type}</h1>\n                                        <p className=\"text-muted\">Create your account</p>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-user\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"text\"\n                                                placeholder={'Username'}\n                                                className={\"form-control\"}\n                                                name={\"username\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.username} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>@</InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"email\" name={\"email\"}\n                                                className={\"form-control\"}\n                                                placeholder={'Email'}\n                                                onChange={this.handleChange}\n                                                value={this.state.email} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-3\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\"\n                                                placeholder={'Password'}\n                                                name={\"password\"}\n                                                className={\"form-control\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.password} />\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"password\"\n                                                placeholder={'Confirm Password'}\n                                                name={\"confirmpass\"}\n                                                className={\"form-control\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.confirmpass} />\n\n                                        </InputGroup>\n                                        <InputGroup className=\"mb-4\">\n                                            <div className=\"input-group-prepend\">\n                                                <label className=\"input-group-text\"\n                                                    htmlFor=\"inputGroupSelect01\">Company</label>\n                                            </div>\n                                            <select onChange={(e) => {\n                                                this.setState({ company_name: e.target.value })\n                                            }} className=\"custom-select\" id=\"inputGroupSelect01\">\n                                                <option selected>Choose...</option>\n                                                {companiesList.map((element) => (\n                                                    <option key={element.company_name}>{element.company_name}</option>\n                                                )\n                                                )}\n                                            </select>\n                                        </InputGroup>\n                                        {/* <InputGroup className=\"mb-4\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"icon-lock\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <input type=\"number\"\n                                                placeholder={'Company Code'}\n                                                name={\"company_code\"}\n                                                className={\"form-control\"}\n                                                onChange={this.handleChange}\n                                                value={this.state.company_code} />\n                                        </InputGroup> */}\n                                        {this.state.password !== this.state.confPass ? \"Password and confirm password should be same\" : \"\"}\n                                        <br />\n                                        <br />\n                                        {this.signUpLoadingButton()}\n                                    </Form>\n                                </CardBody>\n                                <CardFooter className=\"p-4\" />\n                            </Card>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.authenticated,\n    redirectTo: state.navigation.redirectTo\n});\nconst mapDispatchToProps = (dispatch) => ({\n    signInAction: (username, password) => dispatch(signIn(username, password)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpScreenSupplier);\n","import React from \"react\";\nimport SignUpScreen from \"../signUpScreenShipper\";\n\nexport default () => (\n    <SignUpScreen type={'Supplier'}/>\n)\n"],"sourceRoot":""}