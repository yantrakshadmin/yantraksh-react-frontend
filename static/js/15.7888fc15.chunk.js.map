{"version":3,"sources":["components/dataTable.js","actions/data.js","components/upload.js","data/orderTitles.js","data/columns/orders.js","components/orderTable.js","screens/shipper/orderManagement/allOrders.js"],"names":["NCSVButton","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","onClick","onExport","__webpack_exports__","_useState","useState","_useState2","Object","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loadingIndicator","changeLoadingIndicator","useEffect","setTimeout","columns","_props$data","data","_props$right","right","_props$left","left","_props$refPass","refPass","_props$loading","loading","_props$keyField","loaded","keyField","select","_props$expandRow","expandRow","_props$noDataIndicati","noDataIndication","section","Loader","searchClass","searchContainerClass","exportAll","headerClasses","unusedprops","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3___default","search","exportCSV","onlyExportSelection","xprops","style","paddingTop","paddingBottom","float","display","csvProps","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3__","SearchBar","assign","searchProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","baseProps","ref","node","hover","condensed","bordered","pagination","paginationFactory","selectRow","loadOrders","_ref","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","getState","orders","wrap","_context","prev","next","getShipperAllOrderDetails","sent","type","ORDERS_LOADED","orderLoadedSuccessfully","t0","errorFetchingData","stop","_x","_x2","apply","this","arguments","markOrdersOnHold","selected","redirect","_ref2","_callee2","_context2","slice","ORDERS_CHANGING","markHoldItemsApi","map","item","index","includes","id","rtd","is_dispatched","_x3","_x4","markOrdersRTD","_ref3","_callee3","_context3","markItemsForDispatchApi","_x5","_x6","planVehiclesForOrders","_ref4","_callee4","_context4","planVehicle","_x7","_x8","planVehiclesManuallyForOrders","truckID","noOfTrucks","_ref5","_callee5","_context5","planVehicleManuallyButton","_x9","_x10","Basic","_useDropzone","useDropzone","acceptedFiles","getRootProps","getInputProps","console","log","react__WEBPACK_IMPORTED_MODULE_8___default","height","justifyContent","alignItems","padding","textAlign","path","size","reactstrap__WEBPACK_IMPORTED_MODULE_9__","color","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_7__","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default","upload","onClose","toast","success","error","react_router_dom_es_Link__WEBPACK_IMPORTED_MODULE_13__","to","e","fontSize","Upload","_this","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","modal","backdrop","toggle","bind","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","changeBackdrop","setState","prevState","value","target","JSON","parse","reactstrap__WEBPACK_IMPORTED_MODULE_10__","isOpen","width","top","backgroundColor","React","Component","connect","__webpack_require__","d","ALL_ORDERS","ON_HOLD_ORDERS","RTD_ORDERS","DISPATCHED_ORDERS","columns_orders","dataField","text","sort","isDummyField","formatter","cell","row","react_default","Length","Breadth","Height","hrs","getHours","mins","getMinutes","secs","getSeconds","getDate","getMonth","getFullYear","formatDate","Date","date","formatExtraData","truck_type","Badge","rowIndex","align","filterData","hold","dispatched","origin","length","undefined","destination","xd","originMatch","toUpperCase","destinationMatch","push","OrderTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","tableNode","getSelectedData","selectionContext","checkOriginDestinationMatch","key","myArray","i","isValid","checkTruckTypeMatch","handleOnSelect","isSelect","concat","toConsumableArray","filter","x","handleOnSelectAll","rows","ids","r","renderLoadingBtn","phase","ModalFooter","Button","disabled","class","role","aria-hidden","modalToggle","assertThisInitialized","planVehicleManually","selectedTruck","kpi","total_time","total_trucks","total_orders","total_orders_planned","total_rfq","total_bids","total_orders_hold","total_orders_delayed","total_orders_pending","total_trucks_assigned","total_trucks_in_transit","total_weight","total_distance","trucks","truckType","originSelected","destinationSelected","markHold","history","markRTD","getKPIData","allAvailableTrucks","trucksData","getOrders","_this2","_this$props","_this$props$orders","title","_this$props$rtd","_this$props$hold","_this$props$dispatche","changing","sparkLineChartData","label","brandPrimary","getStyle","brandDanger","sparklineChartOpts","tooltips","enabled","responsive","maintainAspectRatio","scales","xAxes","yAxes","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","hoverBorderWidth","legend","makeSparkLineData","dataSetNo","variant","dataset","labels","datasets","borderColor","vehiclePickerModal","Modal","ModalHeader","ModalBody","htmlFor","Input","name","onChange","_","uniqBy","truck","Category","display_name","ButtonGroup","p","index_es","icon","faMinus","faPlus","Form","Row","form","Col","md","self","indexOf","Card","CardHeader","sm","react_chartjs_2_es","options","dist","CardBody","Nav","tabs","NavItem","NavLink","href","active","dataTable","uploadOrders","refreshing","mode","onSelect","onSelectAll","clickToSelect","withRouter","_React$createElement","react__WEBPACK_IMPORTED_MODULE_1___default","_components_orderTable__WEBPACK_IMPORTED_MODULE_2__","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"static/js/15.7888fc15.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport Loader from \"./loader\";\n\nconst NCSVButton = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <button className=\"btn\" onClick={handleClick}>\n            <i className={\"fa fa-download\"}/> &nbsp;\n            Export to CSV\n        </button>\n    );\n};\n\nexport default (props) => {\n    const [loadingIndicator,changeLoadingIndicator] = useState(true);\n    useEffect(()=>{setTimeout(()=>{changeLoadingIndicator(false);},5000)},\n[loadingIndicator]);\n    const {\n        columns, data = [], right = () => {\n        }, left = () => {\n        }, refPass = () => {\n        }, loading = false, loaded = true, keyField = \"id\",\n        select,\n        expandRow = {},\n        noDataIndication={Loader},\n        section,\n        searchClass,\n        searchContainerClass,\n        exportAll,\n        headerClasses,\n        ...unusedprops\n    } = props;\n\n    return (\n        <ToolkitProvider\n            keyField={keyField}\n            data={data}\n            columns={columns}\n            search\n            exportCSV={{onlyExportSelection: !exportAll, exportAll: true}}\n        >\n            {\n                xprops => (\n                    <div>\n                        <div style={{paddingTop: 10, paddingBottom: 10}}>\n                            {left(xprops)}\n                            <div className={searchContainerClass} style={{float: 'right', display: 'inline-block'}}>\n                                {right(xprops)}\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <NCSVButton {...xprops.csvProps} />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <Search.SearchBar className={searchClass} {...xprops.searchProps} />\n                            </div>\n                        </div>\n                        {section ? (\n                            <div style={{paddingTop: 10, paddingBottom: 10}}>\n                                {section}\n                            </div>\n                        ) : null}\n                        <BootstrapTable\n                            {...xprops.baseProps}\n                            ref={node => refPass(node)}\n                            hover\n                            condensed\n                            bordered={false}\n                            pagination={paginationFactory()}\n                            selectRow={select}\n                            loading={loading}\n                            expandRow={expandRow}\n                            headerClasses={headerClasses}\n                            noDataIndication={loadingIndicator?Loader:<div className={'w-100'}><p>No Data</p></div>}\n                            {...unusedprops}\n                        />\n                    </div>\n                )\n            }\n        </ToolkitProvider>\n    );\n}\n","import {\n    getShipperAllOrderDetails,\n    markHoldItemsApi,\n    markItemsForDispatchApi,\n    planVehicle,\n    planVehicleManuallyButton\n} from \"../helpers/api\";\nimport history from '../history';\nimport { ORDERS_CHANGING, ORDERS_LOADED } from \"./index\";\nimport { errorFetchingData, orderLoadedSuccessfully } from \"../helpers/notifications\";\n\nexport const loadOrders = () => (async (dispatch, getState) => {\n    try {\n        const orders = await getShipperAllOrderDetails();\n        dispatch({ type: ORDERS_LOADED, orders: orders });\n        orderLoadedSuccessfully()\n    } catch (e) {\n        errorFetchingData();\n    }\n});\n\n\nexport const markOrdersOnHold = (selected, redirect) => (async (dispatch, getState) => {\n    const orders = getState().data.orders.data;\n    let data = orders.slice();\n\n    dispatch({ type: ORDERS_CHANGING });\n    await markHoldItemsApi(selected);\n\n    orders.map((item, index) => {\n        if (selected.includes(item.id)) {\n            data[index].rtd = false;\n            data[index].is_dispatched = false;\n        }\n\n        return null;\n    });\n\n    dispatch({ type: ORDERS_LOADED, orders: data });\n    redirect('/orders/on-hold');\n});\n\nexport const markOrdersRTD = (selected, redirect) => (async (dispatch, getState) => {\n    const orders = getState().data.orders.data;\n    let data = orders.slice();\n\n    dispatch({ type: ORDERS_CHANGING });\n    await markItemsForDispatchApi(selected);\n\n    orders.map((item, index) => {\n        if (selected.includes(item.id)) {\n            data[index].rtd = true;\n            data[index].is_dispatched = false;\n        }\n\n        return null;\n    });\n\n    dispatch({ type: ORDERS_LOADED, orders: data });\n    redirect('/orders/ready-to-dispatch')\n});\n\nexport const planVehiclesForOrders = (redirect) => (async (dispatch, getState) => {\n    const orders = getState().data.orders.data;\n    let data = orders.slice();\n\n    dispatch({ type: ORDERS_CHANGING });\n    await planVehicle();\n\n    orders.map((item, index) => {\n        if (data[index.rtd]) {\n            data[index].rtd = false;\n            data[index].is_dispatched = true;\n        }\n\n        return null;\n    });\n\n    dispatch({ type: ORDERS_LOADED, orders: data });\n    redirect('/dispatcher')\n});\n\nexport const planVehiclesManuallyForOrders = (truckID, selected, noOfTrucks, redirect) => (async (dispatch, getState) => {\n    const orders = getState().data.orders.data;\n    let data = orders.slice();\n\n    await dispatch({ type: ORDERS_CHANGING });\n    await planVehicleManuallyButton(truckID, selected, noOfTrucks);\n\n    loadOrders()(dispatch, getState);\n});\n","import React from 'react';\nimport {Button, Modal} from 'reactstrap';\nimport {useDropzone} from 'react-dropzone';\nimport {uploadOrders} from \"../helpers/api\";\nimport Link from \"react-router-dom/es/Link\";\nimport {toast} from \"react-toastify\";\nimport { loadOrders } from '../actions/data';\n\nimport {connect} from \"react-redux\";\n\n\nfunction Basic(props) {\n    const {acceptedFiles, getRootProps, getInputProps} = useDropzone();\n\n    console.log(acceptedFiles);\n\n    return (\n        <section>\n            <div {...getRootProps({className: 'dropzone'})} style={{\n                height: '50vh',\n                // width: '50vw',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: 20,\n                textAlign: 'center'\n            }}>\n                <div>\n                    {acceptedFiles[0] ? (\n                        <div>\n                            <h5>\n                                {acceptedFiles[0].path} ({acceptedFiles[0].size / 1000} Kbytes)\n                            </h5>\n                            <br/>\n\n                            <Button color={\"primary\"} size=\"lg\" onClick={async () => {\n                                try {\n                                    await props.upload(acceptedFiles[0]);\n                                    await props.loadOrders();\n                                    await props.onClose();\n                                    toast.success(\"Upload Successful!\");\n                                } catch (e) {\n                                    console.log(e);\n                                    toast.error(\"Upload failed!\");\n                                }\n                            }}>\n                                <i className={\"icon-cloud-upload\"}/> &nbsp;\n                                Upload\n                            </Button>\n\n                            <Link to={'/orders/all'}>\n\n                            </Link>\n                            <Button color={\"error\"} onClick={(e) => props.onClose(e)}>\n                                Cancel\n                            </Button>\n\n                        </div>\n                    ) : (\n                        <div>\n                            <i className={\"icon-cloud-upload\"} style={{fontSize: '5rem'}}/>\n                            <br/>\n                            <input {...getInputProps()} />\n                            <h3>Drag & drop files here, or click to select files</h3>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </section>\n    );\n}\n\n\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            modal: false,\n            backdrop: true\n        };\n\n        this.toggle = this.toggle.bind(this);\n        this.changeBackdrop = this.changeBackdrop.bind(this);\n    }\n\n    toggle() {\n        this.setState(prevState => ({\n            modal: !prevState.modal\n        }));\n    }\n\n    changeBackdrop(e) {\n        let value = e.target.value;\n        if (value !== 'static') {\n            value = JSON.parse(value);\n        }\n        this.setState({backdrop: value});\n    }\n\n    render() {\n        return (\n            <div style={{display: 'inline-block'}}>\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                    className={this.props.className}\n                    backdrop={true}\n                    style={{\n                        padding: 0,\n                        height: '50vh',\n                        width: '50vw',\n                        top: '25%',\n                    }}\n                >\n                    <Basic loadOrders={this.props.loadOrders} upload={this.props.upload} onClose={this.toggle}/>\n                </Modal>\n                <Button color={\"secondary\"}\n                        style={{backgroundColor: 'white'}} onClick={this.toggle}>\n                    <i className={\"icon-cloud-upload\"}/> &nbsp;\n                    Upload\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default connect(null,{ loadOrders })(Upload);\n","export const ALL_ORDERS = \"All Items\";\nexport const ON_HOLD_ORDERS = \"Items On Hold\";\nexport const RTD_ORDERS = \"Ready to Dispatch\";\nexport const DISPATCHED_ORDERS = \"Dispatched Items\";\n","import React from \"react\";\nimport {Badge} from \"reactstrap\";\n\nfunction formatDate(d) {\n    let hrs = d.getHours();\n    let mins = d.getMinutes();\n    let secs = d. getSeconds();\n\n    return (\n        <span>{ d.getDate() }-{ d.getMonth() + 1 }-{ d.getFullYear() } { (\"0\" + hrs).slice(-2) }:{ (\"0\" + mins).slice(-2) }:{ (\"0\" + secs).slice(-2) }</span>\n    )\n}\n\nexport default [{\n    dataField: 'Name',\n    text: 'Name',\n    sort: true\n}, {\n    dataField: 'pid',\n    text: 'SKU ID',\n    sort: true\n}, {\n    dataField: 'Quantity',\n    text: 'Quantity',\n    sort: true\n}, {\n    dataField: 'Height',\n    text: 'Dimension',\n    isDummyField: true,\n    formatter: (cell, row) => (<div>\n        {row.Length} x {row.Breadth} x {row.Height}\n    </div>)\n}, {\n    dataField: 'Weight',\n    text: 'Weight',\n    sort: true\n}, {\n    dataField: 'Volume',\n    text: 'Volume',\n    sort: true,\n}, {\n    dataField: 'origin',\n    text: 'Origin',\n    sort: true\n}, {\n    dataField: 'destination',\n    text: 'Destination',\n    sort: true\n}, {\n    dataField: 'date',\n    text: 'Date',\n    sort: true,\n    formatter: (cell,row) => {\n        let d = new Date(row.date);\n        return formatDate(d);\n    }\n}, {\n    dataField: 'truck_type',\n    text: 'Truck Type',\n    isDummyField: true,\n    formatExtraData: (row) => {\n        if (row.truck_type === \"Open\")\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#eb6b56'}}>{row.truck_type}</Badge>);\n        else if (row.truck_type === \"Container\")\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#3e6787'}}>{row.truck_type}</Badge>);\n        else if (row.truck_type === \"Trailer\")\n            return (<Badge style={{width: '100%',color:'white',backgroundColor:'#47b39d'}}>{row.truck_type}</Badge>)\n    },\n    formatter: (cell, row, rowIndex, formatExtraData) => {\n        return formatExtraData(row);\n    },\n    align: 'center',\n}, {\n    dataField: 'rtd',\n    text: 'Status',\n    isDummyField: true,\n    formatExtraData: (row) => {\n        if (row.is_dispatched)\n            return (<Badge color=\"success\" style={{width: '100%'}}>Dispatched</Badge>);\n        if (row.rtd)\n            return (<Badge color=\"primary\" style={{width: '100%'}}>RTD</Badge>);\n\n        return (<Badge color=\"warning\" style={{width: '100%'}}>On Hold</Badge>)\n    },\n    formatter: (cell, row, rowIndex, formatExtraData) => {\n        return formatExtraData(row);\n    },\n    align: 'center',\n}];\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport {\n    Button,\n    ButtonGroup,\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Form,\n    Input,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n} from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    loadOrders,\n    markOrdersOnHold,\n    markOrdersRTD,\n    planVehiclesForOrders,\n    planVehiclesManuallyForOrders\n} from \"../actions/data\";\nimport { connect } from \"react-redux\";\nimport { ALL_ORDERS, DISPATCHED_ORDERS, ON_HOLD_ORDERS, RTD_ORDERS } from \"../data/orderTitles\";\nimport { refreshing } from \"../helpers/notifications\";\nimport { withRouter } from 'react-router-dom'\nimport history from '../history';\nimport Upload from \"./upload\";\nimport DataTable from \"../components/dataTable\";\nimport columns from \"../data/columns/orders\";\nimport { BeatLoader } from \"react-spinners\";\nimport { getStyle } from \"@coreui/coreui/dist/js/coreui-utilities\";\nimport { Line } from \"react-chartjs-2\";\nimport { allAvailableTrucks, getKPIData, uploadOrders } from \"../helpers/api\";\n\n\nconst filterData = (data, hold, rtd, dispatched, origin = null, destination = null) => {\n    console.log(origin, destination);\n\n    let xd = [];\n    data.map((row) => {\n        if (origin || destination) {\n            const originMatch = row.origin.toUpperCase() === origin || origin === '-';\n            const destinationMatch = row.destination.toUpperCase() === destination || destination === '-';\n            if (!(originMatch && destinationMatch))\n                return null\n        }\n\n        if (!row.is_dispatched && !row.rtd && hold) {\n            xd.push(row);\n            return null;\n        }\n\n\n        if (row.rtd && !row.is_dispatched && rtd) {\n            xd.push(row);\n            return null;\n        }\n\n        if (row.is_dispatched && !row.rtd && dispatched) {\n            xd.push(row);\n            return null;\n        }\n\n\n        // if (!row.is_dispatched && !row.rtd) {\n        //     console.log(\"0\")\n        //     xd.push(row);\n        // } if (row.rtd && !row.is_dispatched) {\n        //     console.log(\"1\")\n        //     xd.push(row);\n        // } if (row.is_dispatched && !row.rtd) {\n        //     console.log(\"2\")\n        //     xd.push(row);\n        // }\n\n        //return null\n    });\n\n\n    return xd;\n};\n\nclass OrderTable extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            kpi: [\n                { total_time: \"\" },\n                { total_trucks: \"\" },\n                { total_orders: \"\" },\n                { total_orders_planned: \"\" },\n                { total_rfq: \"\" },\n                { total_bids: \"\" },\n                { total_orders_hold: \"\" },\n                { total_orders_delayed: \"\" },\n                { total_orders_pending: \"\" },\n                { total_trucks_assigned: \"\" },\n                { total_trucks_in_transit: \"\" },\n                { total_weight: \"\" },\n                { total_distance: \"\" },\n\n            ],\n            modal: false,\n            trucks: [],\n            selectedTruck: [],\n            truckType: '',\n            noOfTrucks: 1,\n            originSelected: '-',\n            destinationSelected: '-',\n            selected: [],\n            phase: 0,\n        }\n    }\n\n    refPass = (node) => {\n        this.tableNode = node;\n    };\n\n    getSelectedData = () => {\n        return this.tableNode.selectionContext.selected;\n    };\n\n    async markHold() {\n        const selected = this.getSelectedData();\n        await this.props.markHold(selected, this.props.history.push);\n    }\n\n    async markRTD() {\n        const selected = this.getSelectedData();\n        await this.props.markRTD(selected, this.props.history.push);\n    }\n\n    planVehicle() {\n        this.props.planVehicle(this.props.history.push);\n        // this.props.history.push('/orders/dispatched')\n    }\n\n    async planVehicleManually() {\n        this.setState({ phase: 1 });\n        await this.props.planVehicleManually(this.state.selectedTruck, this.getSelectedData(), this.state.noOfTrucks, this.props.history.push);\n        this.setState({ phase: 0 });\n        history.push('/dashboard/dispatcher');\n        // this.props.history.push('/orders/dispatched')\n    }\n\n    async componentDidMount() {\n\n        try {\n            const kpi = await getKPIData();\n            const trucksData = await allAvailableTrucks();\n\n            this.setState({\n                kpi,\n                trucks: trucksData\n            });\n        } catch (e) {\n            console.log(e);\n        }\n\n        if (!this.props.loaded)\n            this.props.getOrders()\n    }\n\n    modalToggle() {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    checkOriginDestinationMatch = () => {\n\n        function search(id, myArray) {\n            for (let i = 0; i < myArray.length; i++) {\n                if (myArray[i].id === id) {\n                    return myArray[i];\n                }\n            }\n        }\n\n        const keys = this.getSelectedData();\n        const data = keys.map(key => search(key, this.props.orders));\n\n        let isValid = true;\n\n        for (let i = 0; i < (data.length - 1); i++) {\n            if (data[i].origin !== data[i + 1].origin || data[i].destination !== data[i + 1].destination) {\n                isValid = false;\n                break;\n            }\n        }\n\n        return isValid;\n    };\n\n    checkTruckTypeMatch = () => {\n\n        function search(id, myArray) {\n            for (let i = 0; i < myArray.length; i++) {\n                if (myArray[i].id === id) {\n                    return myArray[i];\n                }\n            }\n        }\n\n        const keys = this.getSelectedData();\n        const data = keys.map(key => search(key, this.props.orders));\n\n        let isValid = true;\n\n        for (let i = 0; i < (data.length - 1); i++) {\n            if (data[i].truck_type !== data[i + 1].truck_type) {\n                isValid = false;\n                break;\n            }\n        }\n\n        return isValid;\n    };\n\n    handleOnSelect = (row, isSelect) => {\n        if (isSelect) {\n            this.setState(() => ({\n                selected: [...this.state.selected, row.id]\n            }));\n        } else {\n            this.setState(() => ({\n                selected: this.state.selected.filter(x => x !== row.id)\n            }));\n        }\n    };\n\n\n\n    handleOnSelectAll = (isSelect, rows) => {\n        const ids = rows.map(r => r.id);\n        if (isSelect) {\n            this.setState(() => ({\n                selected: ids\n            }));\n        } else {\n            this.setState(() => ({\n                selected: []\n            }));\n        }\n    };\n\n    renderLoadingBtn = () => {\n        if (this.state.phase === 1) {\n            return (\n                <ModalFooter>\n                    <Button color=\"success\" className=\"px-4\" disabled>\n                        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Loading\n                    </Button>\n                    <Button color=\"secondary\" onClick={this.modalToggle.bind(this)}>Cancel</Button>\n                </ModalFooter>\n            );\n        }\n        return (\n            <ModalFooter>\n                <Button color=\"success\" onClick={this.planVehicleManually.bind(this)}\n                    disabled={this.state.selectedTruck === null && this.tableNode && this.checkOriginDestinationMatch()}>\n                    PACK ITEMS\n                    </Button>{' '}\n                <Button color=\"secondary\" onClick={this.modalToggle.bind(this)}>Cancel</Button>\n            </ModalFooter>\n        );\n    }\n\n    render() {\n        const {\n            orders = [],\n            title,\n            rtd = false,\n            hold = false,\n            dispatched = false,\n            loading,\n            loaded,\n            getOrders,\n            changing,\n            props\n        } = this.props;\n\n        console.log(\"RTD: \", rtd)\n        console.log(\"Hold: \", hold)\n        console.log(\"Dispatched: \", dispatched)\n\n        const sparkLineChartData = [\n            {\n                data: [35, 23, 56, 22, 97, 23, 64],\n                label: 'New Clients',\n            },\n            {\n                data: [65, 59, 84, 84, 51, 55, 40],\n                label: 'Recurring Clients',\n            },\n            {\n                data: [35, 23, 56, 22, 97, 23, 64],\n                label: 'Pageviews',\n            },\n            {\n                data: [65, 59, 84, 84, 51, 55, 40],\n                label: 'Organic',\n            },\n            {\n                data: [78, 81, 80, 45, 34, 12, 40],\n                label: 'CTR',\n            },\n            {\n                data: [1, 13, 9, 17, 34, 41, 38],\n                label: 'Bounce Rate',\n            },\n        ];\n        const brandPrimary = getStyle('--primary');\n        const brandDanger = getStyle('--danger');\n        const sparklineChartOpts = {\n            tooltips: {\n                enabled: false,\n                // custom: CustomTooltips\n            },\n            responsive: true,\n            maintainAspectRatio: true,\n            scales: {\n                xAxes: [\n                    {\n                        display: false,\n                    }],\n                yAxes: [\n                    {\n                        display: false,\n                    }],\n            },\n            elements: {\n                line: {\n                    borderWidth: 2,\n                },\n                point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                    hoverBorderWidth: 3,\n                },\n            },\n            legend: {\n                display: false,\n            },\n        };\n\n        const makeSparkLineData = (dataSetNo, variant) => {\n            const dataset = sparkLineChartData[dataSetNo];\n            const data = {\n                labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n                datasets: [\n                    {\n                        backgroundColor: 'transparent',\n                        borderColor: variant ? variant : '#c2cfd6',\n                        data: dataset.data,\n                        label: dataset.label,\n                    },\n                ],\n            };\n            return () => data;\n        };\n\n        const leftButtons = (props) => (\n            <div style={{ display: 'inline-block' }}>\n                <ButtonGroup>\n                    <Button color={\"warning\"}\n                        onClick={this.markHold.bind(this)}\n                        disabled={title === ON_HOLD_ORDERS}>\n                        &nbsp;\n                       Mark Hold\n                    </Button>\n\n                    <Button color=\"primary\"\n                        onClick={this.markRTD.bind(this)}\n                        disabled={title === RTD_ORDERS}>\n                        <i className={\"fa fa-share\"} /> &nbsp;\n                        Ready to Dispatch\n                    </Button>\n                </ButtonGroup>\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <ButtonGroup>\n                    {title === RTD_ORDERS ? <Button color={\"success\"}\n                        onClick={this.planVehicle.bind(this)}\n                        disabled={title === DISPATCHED_ORDERS}>\n                        <i className={\"fa fa-rocket\"} /> &nbsp;\n                        Auto-dispatch\n                    </Button> : null}\n                    &nbsp;\n                    {title === RTD_ORDERS ? <Button color={\"success\"}\n                        onClick={() => {\n                            this.setState({ truckType: \"open\" })\n                            this.modalToggle();\n                        }}\n                        disabled={title === DISPATCHED_ORDERS}>\n                        {/*<i className={\"fa fa-rocket\"}/> &nbsp;*/}\n                        Manual-dispatch\n                    </Button> : null}\n                </ButtonGroup>\n            </div>\n        );\n\n        const rightButtons = (props) => (\n            <div style={{ display: 'inline-block' }}>\n                {title === ALL_ORDERS ? <Upload upload={uploadOrders} /> : null}\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                <Button color={\"link\"} onClick={() => {\n                    refreshing();\n                    getOrders();\n                }}>\n                    <i className={\"fa fa-refresh\"} /> &nbsp;\n                    Refresh\n                </Button>\n            </div>\n        );\n\n\n        const vehiclePickerModal = (\n            <Modal isOpen={this.state.modal} toggle={this.modalToggle.bind(this)} className={this.props.className}>\n                <ModalHeader toggle={this.toggle}>Select Truck</ModalHeader>\n                <ModalBody>\n                    {this.tableNode ? ((this.checkOriginDestinationMatch() && this.checkTruckTypeMatch()) ? (\n                        <div>\n                            <h1>Select truck</h1>\n                            <br />\n\n                            <label htmlFor=\"truck-type\">Truck Type</label>\n                            <Input type=\"select\" name=\"truck-type\" id=\"truck-type\" onChange={(e) => {\n                                this.setState({\n                                    truckType: e.target.value\n                                })\n                            }}>\n                                <option value=\"open\">Open</option>\n                                <option value=\"container\">Container</option>\n                                <option value=\"trailer\">Trailer</option>\n                            </Input>\n                            <br />\n                            <label htmlFor=\"truck\">Truck</label>\n                            <Input type=\"select\" name=\"truck\" id=\"truck\" onChange={(e) => {\n                                this.setState({\n                                    selectedTruck: e.target.value\n                                })\n                            }}>\n                                <option disabled selected>---- Select ---</option>\n                                {\n                                    _.uniqBy(this.state.trucks, 'display_name').map(truck => {\n                                        if (truck.Category.toUpperCase() === this.state.truckType.toUpperCase()) {\n                                            return <option value={truck.id}>{truck.display_name}</option>\n                                        }\n                                    })\n                                }\n                            </Input>\n                            <br />\n                            <label>No of Trucks</label><br />\n                            <ButtonGroup>\n                                <Button color=\"primary\" onClick={() => {\n                                    if (this.state.noOfTrucks > 1)\n                                        this.setState(p => {\n                                            return { noOfTrucks: p.noOfTrucks - 1 }\n                                        })\n                                }}>\n                                    <FontAwesomeIcon icon={faMinus} />\n                                </Button>\n                                <Button color=\"light\">{this.state.noOfTrucks}</Button>\n                                <Button color=\"primary\" onClick={() => {\n                                    this.setState(p => {\n                                        return { noOfTrucks: p.noOfTrucks + 1 }\n                                    })\n                                }}>\n                                    <FontAwesomeIcon icon={faPlus} />\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                    ) : (\n                            <div>\n                                <h1>\n                                    Please Reselect Items.\n                            </h1>\n                                Origin-Destination of all Items doesn't match OR Truck types are not same!\n                        </div>\n                        )) : \"Data Not Loaded\"}\n                </ModalBody>\n                {this.renderLoadingBtn()}\n            </Modal>\n        );\n\n        const section = (\n            <div>\n                <Form>\n                    <Row form>\n                        <Col md={2}>\n                            <Input\n                                type=\"select\"\n                                onChange={(e) => this.setState({\n                                    originSelected: e.target.value\n                                })}>\n                                <option selected value={'-'}>----- Origin -----</option>\n                                {\n                                    orders.map(item => item.origin)\n                                        .filter((value, index, self) => self.indexOf(value) === index)\n                                        .map(item => <option value={item.toUpperCase()}>{item}</option>)\n                                }\n                            </Input>\n                        </Col>\n                        <Col md={1} style={{ textAlign: 'center' }}>\n                            to\n                        </Col>\n                        <Col md={2}>\n                            <Input type=\"select\"\n                                onChange={(e) => this.setState({\n                                    destinationSelected: e.target.value\n                                })}>\n                                <option selected value={'-'}>----- Destination -----</option>\n                                {\n                                    orders.map(item => item.destination)\n                                        .filter((value, index, self) => self.indexOf(value) === index)\n                                        .map(item => <option value={item.toUpperCase()}>{item}</option>)\n                                }\n                            </Input>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n\n        return (\n            (\n                <div>\n                    <Card>\n                        <CardHeader>\n                            <i className=\"fa fa-align-justify\" />{title}\n                            <Row>\n                                <Col sm=\"3\">\n                                    <div className=\"callout callout-info\">\n                                        <small className=\"text-muted\">Total Orders</small>\n                                        <br />\n                                        {\n                                            this.state.kpi.map(item => (\n                                                <strong className=\"h4\">{item.total_orders}</strong>\n                                            ))}\n\n                                        <div className=\"chart-wrapper\">\n                                            <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts}\n                                                width={100} height={30} />\n                                        </div>\n                                    </div>\n                                </Col>\n\n                                <Col sm=\"3\">\n                                    <div className=\"callout callout-danger\">\n                                        <small className=\"text-muted\">Planned Orders</small>\n                                        <br />\n                                        {\n                                            this.state.kpi.map(item => (\n                                                <strong className=\"h4\">{item.total_orders_planned}</strong>\n                                            ))}\n                                        <div className=\"chart-wrapper\">\n                                            <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\n                                                width={100} height={30} />\n                                        </div>\n                                    </div>\n                                </Col>\n\n\n                                <Col sm=\"3\">\n                                    <div className=\"callout callout-info\">\n                                        <small className=\"text-muted\">Pending Orders</small>\n                                        <br />\n                                        {\n                                            this.state.kpi.map(item => (\n                                                <strong className=\"h4\">{item.total_orders_pending}</strong>\n                                            ))}\n                                        <div className=\"chart-wrapper\">\n                                            <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts}\n                                                width={100} height={30} />\n                                        </div>\n                                    </div>\n                                </Col>\n\n                                <Col sm=\"3\">\n                                    <div className=\"callout callout-danger\">\n                                        <small className=\"text-muted\">Delayed Orders</small>\n                                        <br />\n                                        {\n                                            this.state.kpi.map(item => (\n                                                <strong className=\"h4\">{item.total_orders_delayed}</strong>\n                                            ))}\n                                        <div className=\"chart-wrapper\">\n                                            <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\n                                                width={100} height={30} />\n                                        </div>\n                                    </div>\n                                </Col>\n\n\n\n                            </Row>\n                            <small className=\"text-muted\" />\n                            <span style={{ float: 'right' }}>\n                                {changing ? <BeatLoader /> : null}\n\n                            </span>\n                        </CardHeader>\n                        <CardBody>\n                            <Nav tabs>\n                                <NavItem>\n                                    <NavLink href=\"/#/dashboard/orders\"\n                                        active={title === ALL_ORDERS}>{ALL_ORDERS}</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/#/dashboard/orders/on-hold\"\n                                        active={title === ON_HOLD_ORDERS}>{ON_HOLD_ORDERS}</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/#/dashboard/orders/ready-to-dispatch\"\n                                        active={title === RTD_ORDERS}>{RTD_ORDERS}</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/#/dashboard/orders/dispatched\"\n                                        active={title === DISPATCHED_ORDERS}>{DISPATCHED_ORDERS}</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <DataTable\n                                data={filterData(orders, hold, rtd, dispatched, this.state.originSelected, this.state.destinationSelected)}\n                                loading={loading}\n                                loaded={loaded}\n                                columns={columns}\n                                right={rightButtons}\n                                left={leftButtons}\n                                keyField={\"id\"}\n                                select={{\n                                    mode: \"checkbox\", selected: this.state.selected, onSelect: this.handleOnSelect,\n                                    onSelectAll: this.handleOnSelectAll, clickToSelect: true,\n                                }}\n                                refPass={this.refPass.bind(this)}\n                                section={section}\n                                {...props}\n                            />\n                        </CardBody>\n                    </Card>\n                    {vehiclePickerModal}\n                </div>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loading: state.data.orders.loading,\n    loaded: state.data.orders.loaded,\n    changing: state.data.orders.changing,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrders: () => dispatch(loadOrders()),\n    markHold: (selected, redirect) => dispatch(markOrdersOnHold(selected, redirect)),\n    markRTD: (selected, redirect) => dispatch(markOrdersRTD(selected, redirect)),\n    planVehicle: (redirect) => dispatch(planVehiclesForOrders(redirect)),\n    planVehicleManually: (truckID, selected, redirect) => dispatch(planVehiclesManuallyForOrders(truckID, selected, redirect))\n});\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OrderTable));\n","import React from 'react';\nimport OrderTable from \"../../../components/orderTable\";\nimport {ALL_ORDERS} from \"../../../data/orderTitles\";\nimport {connect} from \"react-redux\";\n\n\nconst AllOrderScreen = (props) => {\n    return (\n        <OrderTable title={ALL_ORDERS} orders={props.orders} rtd={true} dispatched={true} hold={true} dispatched={true}  disableAutoDispatch={true} disableManualDispatch={true} />\n    );\n};\n\n\nconst mapStateToProps = (state) => ({\n    orders: state.data.orders.data\n});\n\nexport default connect(mapStateToProps)(AllOrderScreen);\n"],"sourceRoot":""}