{"version":3,"sources":["components/dataTable.js","screens/shipper/reports/showReports.js","screens/shipper/reports/normalReports/tracking.js"],"names":["NCSVButton","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","onClick","onExport","__webpack_exports__","_useState","useState","_useState2","Object","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","loadingIndicator","changeLoadingIndicator","useEffect","setTimeout","columns","_props$data","data","_props$right","right","_props$left","left","_props$refPass","refPass","_props$loading","loading","_props$keyField","loaded","keyField","select","_props$expandRow","expandRow","_props$noDataIndicati","noDataIndication","section","Loader","searchClass","searchContainerClass","exportAll","headerClasses","unusedprops","_Users_faisal_Desktop_yantraksh_nativeApp_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3___default","search","exportCSV","onlyExportSelection","xprops","style","paddingTop","paddingBottom","float","display","csvProps","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_3__","SearchBar","assign","searchProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_4___default","baseProps","ref","node","hover","condensed","bordered","pagination","paginationFactory","selectRow","ShowReports","state","startDate","Date","startDateString","endDate","endDateString","companiesList","company_name","changeFormat","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","handleStartChange","_this","setState","handleEndChange","getReport","getReportsShipper","url","date_from","date_to","c_name","then","result","catch","e","console","error","_this2","this","getCompanyShipper","CREATE_ACCOUNT_SHIPPER","log","_this3","_this$state","_this$props","columns_props","column_collapsed","CustomDatePicker","_ref","value","react__WEBPACK_IMPORTED_MODULE_5___default","type","renderer","row","rowIndex","_components_dataTable__WEBPACK_IMPORTED_MODULE_10__","items","showExpandColumn","expandByColumnOnly","onlyOneExpanding","reactstrap__WEBPACK_IMPORTED_MODULE_7__","padding","flexDirection","alignItems","margin","react_datepicker__WEBPACK_IMPORTED_MODULE_6___default","selected","showTimeSelect","dateFormat","customInput","onChange","target","id","map","element","key","Component","Tracking","_showReports__WEBPACK_IMPORTED_MODULE_6__","dataField","text","sort","REPORT_TRACKING"],"mappings":"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","file":"static/js/54.e4c757f0.chunk.js","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport ToolkitProvider, {Search} from \"react-bootstrap-table2-toolkit\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport Loader from \"./loader\";\n\nconst NCSVButton = (props) => {\n    const handleClick = () => {\n        props.onExport();\n    };\n    return (\n        <button className=\"btn\" onClick={handleClick}>\n            <i className={\"fa fa-download\"}/> &nbsp;\n            Export to CSV\n        </button>\n    );\n};\n\nexport default (props) => {\n    const [loadingIndicator,changeLoadingIndicator] = useState(true);\n    useEffect(()=>{setTimeout(()=>{changeLoadingIndicator(false);},5000)},\n[loadingIndicator]);\n    const {\n        columns, data = [], right = () => {\n        }, left = () => {\n        }, refPass = () => {\n        }, loading = false, loaded = true, keyField = \"id\",\n        select,\n        expandRow = {},\n        noDataIndication={Loader},\n        section,\n        searchClass,\n        searchContainerClass,\n        exportAll,\n        headerClasses,\n        ...unusedprops\n    } = props;\n\n    return (\n        <ToolkitProvider\n            keyField={keyField}\n            data={data}\n            columns={columns}\n            search\n            exportCSV={{onlyExportSelection: !exportAll, exportAll: true}}\n        >\n            {\n                xprops => (\n                    <div>\n                        <div style={{paddingTop: 10, paddingBottom: 10}}>\n                            {left(xprops)}\n                            <div className={searchContainerClass} style={{float: 'right', display: 'inline-block'}}>\n                                {right(xprops)}\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <NCSVButton {...xprops.csvProps} />\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                <Search.SearchBar className={searchClass} {...xprops.searchProps} />\n                            </div>\n                        </div>\n                        {section ? (\n                            <div style={{paddingTop: 10, paddingBottom: 10}}>\n                                {section}\n                            </div>\n                        ) : null}\n                        <BootstrapTable\n                            {...xprops.baseProps}\n                            ref={node => refPass(node)}\n                            hover\n                            condensed\n                            bordered={false}\n                            pagination={paginationFactory()}\n                            selectRow={select}\n                            loading={loading}\n                            expandRow={expandRow}\n                            headerClasses={headerClasses}\n                            noDataIndication={loadingIndicator?Loader:<div className={'w-100'}><p>No Data</p></div>}\n                            {...unusedprops}\n                        />\n                    </div>\n                )\n            }\n        </ToolkitProvider>\n    );\n}\n","import React, {Component} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport {CardHeader, Button} from 'reactstrap';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {CREATE_ACCOUNT_SHIPPER, getCompanyShipper, getReportsShipper,} from \"../../../helpers/api\";\nimport DataTable from '../../../components/dataTable'\n\n//date_to\n//date_from\n//c_name\n\nlet columnFarzi = [\n    {\n        'truck_name': 'Truck Name',\n        'truck_type': 'truck type',\n        'origin': \"origin\"\n    }, {\n        'truck_name': 'Truck Name',\n        'truck_type': 'truck type',\n        'origin': \"origin\"\n    }, {\n        'truck_name': 'Truck Name',\n        'truck_type': 'truck type',\n        'origin': \"origin\"\n    }, {\n        'truck_name': 'Truck Name',\n        'truck_type': 'truck type',\n        'origin': \"origin\"\n    },\n];\n\nlet items = [\n    {\n        'name': 'something',\n        'length': 2,\n        'width': 2\n\n    }, {\n        'name': 'something',\n        'length': 2,\n        'width': 2\n\n    }, {\n        'name': 'something',\n        'length': 2,\n        'width': 2\n\n    }, {\n        'name': 'something',\n        'length': 2,\n        'width': 2\n\n    },\n];\n\nclass ShowReports extends Component {\n    state = {\n        startDate: new Date,\n        startDateString: '2019-11-05',\n        endDate: new Date,\n        endDateString: '2019-11-11',\n        companiesList: [],\n        company_name: 1,\n        data: []\n    };\n\n    changeFormat = (date) => {\n        let d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n        return [year, month, day].join('-')\n    };\n    handleStartChange = date => {\n        this.setState({\n            startDate: date,\n            startDateString: this.changeFormat(date)\n        });\n    };\n    handleEndChange = date => {\n        this.setState({\n            endDate: date,\n            endDateString: this.changeFormat(date)\n        });\n    };\n\n    componentDidMount() {\n        getCompanyShipper(CREATE_ACCOUNT_SHIPPER)\n            .then((result) => {\n                this.setState({companiesList: result})\n            })\n            .catch(e => console.log(e))\n    }\n\n    getReport = () => {\n        getReportsShipper(this.props.url, {\n            date_from: this.state.startDateString, date_to: this.state.endDateString,\n            c_name: 1\n        })\n            .then(result => {\n                this.setState({\n                    data: result.data,\n                })\n            })\n            .catch(e => console.error(e));\n    };\n\n    render() {\n        const {companiesList, data} = this.state;\n        const {columns_props, column_collapsed,showExpandColumn} = this.props;\n        const CustomDatePicker = ({value, onClick}) => (\n            <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={onClick}>{value}</button>\n        );\n        const expandRow = {\n            renderer: (row, rowIndex) => {\n                return column_collapsed ? (\n                    <div className={'p-3 '}>\n                        <DataTable\n                            exportAll={true}\n                            columns={column_collapsed}\n                            data={data[rowIndex].items}\n                        />\n                    </div>) : null\n            },\n            showExpandColumn: showExpandColumn,\n            expandByColumnOnly: true,\n            onlyOneExpanding: true,\n        };\n        return (\n            <div className={'bg-white'}>\n                <CardHeader>\n                    Get Reports\n                </CardHeader>\n                <div style={{padding: 10, flexDirection: 'row', display: \"flex\", alignItems: 'center'}}>\n                    <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center',}}>\n                        <h5 style={{margin: 5}}>To:\n                        </h5>\n                        <div style={{margin: 10,}}>\n                            <DatePicker\n                                selected={this.state.startDate}\n                                showTimeSelect={false}\n                                dateFormat=\"yyyy-MM-dd\"\n                                customInput={<CustomDatePicker/>}\n                                onChange={this.handleStartChange}\n                            />\n                        </div>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center',}}>\n                        <h5 style={{margin: 5}}>From:\n                        </h5>\n                        <div style={{margin: 10,}}>\n                            <DatePicker\n                                selected={this.state.endDate}\n                                dateFormat=\"yyyy-MM-dd\"\n                                showTimeSelect={false}\n                                customInput={<CustomDatePicker/>}\n                                onChange={this.handleEndChange}\n                            />\n                        </div>\n                    </div>\n                    <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center',}}>\n                        <h5 style={{margin: 5}}>Company:\n                        </h5>\n                        <select style={{margin: 5,}} onChange={(e) => {\n                            this.setState({company_name: e.target.value})\n                        }} className=\"custom-select\" id=\"inputGroupSelect01\">\n                            <option selected>Choose...</option>\n                            {companiesList.map((element) => (\n                                    <option key={element.company_name}>{element.company_name}</option>\n                                )\n                            )}\n                        </select>\n                    </div>\n                    <button className={'btn btn-success btn-sm m-3'} onClick={() => this.getReport()}>Get Report\n                    </button>\n                </div>\n                <div className={'m-3'}>\n                    <div className={'scrolling-wrapper-flexbox'}>\n                        <DataTable\n                            headerClasses={'bg-light'}\n                            expandRow={expandRow}\n                            exportAll={true}\n                            data={data}\n                            columns={columns_props}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ShowReports;\n","import React, {Component} from 'react';\nimport ShowReports from \"../showReports\";\nimport {REPORT_TRACKING} from \"../../../../helpers/api\";\n\nclass Tracking extends Component {\n    render() {\n        const columns = [{\n            dataField: 'tracking_id',\n            text: 'Tracking ID',\n            sort: true\n        },\n            {\n                dataField: 'trip_id',\n                text: 'Trip ID',\n                sort: true\n            },\n            {\n                dataField: 'telephone',\n                text: 'Phone Number',\n                sort: true\n            }, {\n                dataField: 'address',\n                text: 'Address',\n                sort: true\n            },\n            {\n                dataField: 'city',\n                text: 'City',\n                sort: true\n            },\n            {\n                dataField: 'created_at',\n                text: 'Created At',\n                sort: true\n            }, {\n                dataField: 'offered_price',\n                text: 'Offered Price',\n                sort: true\n            },\n            {\n                dataField: 'weight',\n                text: 'Weight',\n                sort: true\n            },\n            {\n                dataField: 'status',\n                text: 'Status',\n                sort: true\n            }, {\n                dataField: 'created_on',\n                text: 'Created On',\n                sort: true\n            },\n            {\n                dataField: 'route_tat',\n                text: 'Route Tat',\n                sort: true\n            },\n            {\n                dataField: 'percent_filled',\n                text: 'Percent Filled',\n                sort: true\n            },\n        ];\n        const column_collapsed = [\n            {\n                dataField: 'name',\n                text: 'Name',\n                sort: true\n            },\n            {\n                dataField: 'length',\n                text: 'Length',\n                sort: true\n            },\n            {\n                dataField: 'width',\n                text: 'Width',\n                sort: true\n            }, {\n                dataField: 'height',\n                text: 'Height',\n                sort: true\n            },\n            {\n                dataField: 'weight',\n                text: 'Weight',\n                sort: true\n            },\n            {\n                dataField: 'volume',\n                text: 'volume',\n                sort: true\n            },\n        ];\n\n        return (\n            <div>\n                <ShowReports columns_props={columns} column_collapsed={column_collapsed} url={REPORT_TRACKING}/>\n            </div>\n        );\n    }\n}\n\nexport default Tracking;\n"],"sourceRoot":""}