{"version":3,"sources":["../node_modules/reactstrap/es/Badge.js","screens/shipper/freightManagement/liveAvailableTrucks.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","color","a","string","pill","bool","tag","innerRef","oneOfType","object","func","children","node","className","cssModule","Badge","props","Tag","attributes","Object","classes","href","createElement","ref","defaultProps","__webpack_exports__","columns","dataField","text","sort","formatter","cell","row","truck_type","react__WEBPACK_IMPORTED_MODULE_3___default","reactstrap__WEBPACK_IMPORTED_MODULE_4__","style","width","d","hrs","getHours","mins","getMinutes","secs","getSeconds","getDate","getMonth","getFullYear","slice","formatDate","Date","scheduled_date","_useState","useState","_useState2","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","data","setData","_useState3","total_time","total_trucks","total_orders","total_orders_planned","total_rfq","total_bids","total_orders_hold","total_orders_delayed","total_orders_pending","total_trucks_assigned","total_trucks_in_transit","total_weight","total_distance","_useState4","kpiData","setKpiData","sparkLineChartData","label","brandPrimary","getStyle","brandDanger","sparklineChartOpts","tooltips","enabled","responsive","maintainAspectRatio","scales","xAxes","display","yAxes","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","hoverBorderWidth","legend","makeSparkLineData","dataSetNo","variant","dataset","labels","datasets","backgroundColor","borderColor","useEffect","loadApiData","_ref","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","c_Users_Rumeet_Singh_Desktop_yantraksh_react_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","trucks","wrap","_context","prev","next","refreshing","liveAvailableTrucks","sent","stop","apply","this","arguments","loadKpiData","_ref2","_callee2","kpi","_context2","getKPIData","console","log","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","sm","map","item","react_chartjs_2__WEBPACK_IMPORTED_MODULE_16__","options","height","reactstrap__WEBPACK_IMPORTED_MODULE_9__","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_10___default","keyField","search","paddingTop","paddingBottom","float","react_bootstrap_table2_toolkit__WEBPACK_IMPORTED_MODULE_10__","SearchBar","searchProps","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_11___default","assign","baseProps","hover","condensed","striped","bordered","pagination","paginationFactory","noDataIndication","Loader"],"mappings":"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","file":"static/js/59.85093713.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, { useEffect, useState } from 'react';\r\nimport { Badge, Card, CardBody, CardHeader, Col, Row } from 'reactstrap';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { refreshing } from \"../../../helpers/notifications\";\r\nimport { getKPIData, liveAvailableTrucks } from \"../../../helpers/api\";\r\nimport Loader from \"../../../components/loader\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { getStyle } from \"@coreui/coreui/dist/js/coreui-utilities\";\r\n\r\n\r\nfunction formatDate(d) {\r\n    let hrs = d.getHours();\r\n    let mins = d.getMinutes();\r\n    let secs = d.getSeconds();\r\n\r\n    return (\r\n        <span>{d.getDate()}-{d.getMonth() + 1}-{d.getFullYear()} {(\"0\" + hrs).slice(-2)}:{(\"0\" + mins).slice(-2)}:{(\"0\" + secs).slice(-2)}</span>\r\n    )\r\n}\r\n\r\n\r\nconst columns = [\r\n    {\r\n        dataField: 'name',\r\n        text: 'Name',\r\n        sort: true\r\n\r\n    },\r\n    {\r\n        dataField: 'truck_type',\r\n        text: 'Truck Type',\r\n        sort: true,\r\n        formatter: (cell, row) => {\r\n            if (row.truck_type === 1)\r\n                return (<Badge color=\"success\" style={{ width: '100%' }}>Container</Badge>);\r\n            if (row.truck_type === 2)\r\n                return (<Badge color=\"primary\" style={{ width: '100%' }}>Trailer</Badge>);\r\n            if (row.truck_type === 3)\r\n                return (<Badge color=\"warning\" style={{ width: '100%' }}>Open</Badge>)\r\n        },\r\n\r\n    }, {\r\n        dataField: 'origin',\r\n        text: 'Origin',\r\n        sort: true\r\n\r\n    }, {\r\n        dataField: 'destination',\r\n        text: 'Destination',\r\n        sort: true\r\n    }, {\r\n        dataField: 'total_trucks',\r\n        text: 'No. of trucks',\r\n\r\n    }, {\r\n        dataField: 'scheduled_date',\r\n        text: 'Date',\r\n        sort: true,\r\n        formatter: (cell, row) => {\r\n            let d = new Date(row.scheduled_date);\r\n            return formatDate(d);\r\n        }\r\n    }, {\r\n        dataField: 'offered_price',\r\n        text: 'Offered Price',\r\n        sort: true\r\n    }\r\n];\r\n\r\n\r\nexport default () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [kpiData, setKpiData] = useState([\r\n        { total_time: \"\" },\r\n        { total_trucks: \"\" },\r\n        { total_orders: \"\" },\r\n        { total_orders_planned: \"\" },\r\n        { total_rfq: \"\" },\r\n        { total_bids: \"\" },\r\n        { total_orders_hold: \"\" },\r\n        { total_orders_delayed: \"\" },\r\n        { total_orders_pending: \"\" },\r\n        { total_trucks_assigned: \"\" },\r\n        { total_trucks_in_transit: \"\" },\r\n        { total_weight: \"\" },\r\n        { total_distance: \"\" },\r\n\r\n    ]);\r\n\r\n\r\n    const sparkLineChartData = [\r\n        {\r\n            data: [35, 23, 56, 22, 97, 23, 64],\r\n            label: 'New Clients',\r\n        },\r\n        {\r\n            data: [65, 59, 84, 84, 51, 55, 40],\r\n            label: 'Recurring Clients',\r\n        },\r\n        {\r\n            data: [35, 23, 56, 22, 97, 23, 64],\r\n            label: 'Pageviews',\r\n        },\r\n        {\r\n            data: [65, 59, 84, 84, 51, 55, 40],\r\n            label: 'Organic',\r\n        },\r\n        {\r\n            data: [78, 81, 80, 45, 34, 12, 40],\r\n            label: 'CTR',\r\n        },\r\n        {\r\n            data: [1, 13, 9, 17, 34, 41, 38],\r\n            label: 'Bounce Rate',\r\n        },\r\n    ];\r\n    const brandPrimary = getStyle('--primary')\r\n    const brandDanger = getStyle('--danger')\r\n    const sparklineChartOpts = {\r\n        tooltips: {\r\n            enabled: false,\r\n            // custom: CustomTooltips\r\n        },\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        scales: {\r\n            xAxes: [\r\n                {\r\n                    display: false,\r\n                }],\r\n            yAxes: [\r\n                {\r\n                    display: false,\r\n                }],\r\n        },\r\n        elements: {\r\n            line: {\r\n                borderWidth: 2,\r\n            },\r\n            point: {\r\n                radius: 0,\r\n                hitRadius: 10,\r\n                hoverRadius: 4,\r\n                hoverBorderWidth: 3,\r\n            },\r\n        },\r\n        legend: {\r\n            display: false,\r\n        },\r\n    };\r\n\r\n\r\n    const makeSparkLineData = (dataSetNo, variant) => {\r\n        const dataset = sparkLineChartData[dataSetNo];\r\n        const data = {\r\n            labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n            datasets: [\r\n                {\r\n                    backgroundColor: 'transparent',\r\n                    borderColor: variant ? variant : '#c2cfd6',\r\n                    data: dataset.data,\r\n                    label: dataset.label,\r\n                },\r\n            ],\r\n        };\r\n        return () => data;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const loadApiData = async () => {\r\n            refreshing();\r\n            const trucks = await liveAvailableTrucks();\r\n            setData(trucks)\r\n        };\r\n\r\n        const loadKpiData = async () => {\r\n            refreshing();\r\n            const kpi = await getKPIData();\r\n            setKpiData(kpi);\r\n            console.log(kpi, \"kp\");\r\n            console.log(kpiData, \"wfnwdiacoaoashoasdosjdoasjdo\", setKpiData);\r\n        };\r\n\r\n        loadApiData();\r\n        loadKpiData()\r\n\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"animated fadeIn\">\r\n            <Card>\r\n\r\n                <CardHeader>\r\n                    <i className=\"fa fa-align-justify\" /> Live available trucks <small className=\"text-muted\" />\r\n                    <Row>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"callout callout-danger\">\r\n                                <small className=\"text-muted\">Total RFQ Raised</small>\r\n                                <br />\r\n                                {\r\n                                    kpiData.map(item => (<strong className=\"h4\">{item.total_rfq}</strong>))}\r\n\r\n                                <div className=\"chart-wrapper\">\r\n                                    <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\r\n                                        width={100} height={30} />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"callout callout-info\">\r\n                                <small className=\"text-muted\">Total Bids received</small>\r\n                                <br />\r\n                                {\r\n                                    kpiData.map(item => (<strong className=\"h4\">{item.total_bids}</strong>))}\r\n\r\n                                <div className=\"chart-wrapper\">\r\n                                    <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts}\r\n                                        width={100} height={30} />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"callout callout-info\">\r\n                                <small className=\"text-muted\">Total Trucks Assigned</small>\r\n                                <br />\r\n                                {\r\n                                    kpiData.map(item => (<strong className=\"h4\">{item.total_trucks_assigned}</strong>))}\r\n\r\n                                <div className=\"chart-wrapper\">\r\n                                    <Line data={makeSparkLineData(0, brandPrimary)} options={sparklineChartOpts} width={100}\r\n                                        height={30} />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <div className=\"callout callout-danger\">\r\n                                <small className=\"text-muted\">Total Trucks In Transit</small>\r\n                                <br />\r\n\r\n                                {\r\n                                    kpiData.map(item => (<strong className=\"h4\">{item.total_trucks}</strong>))}\r\n                                <div className=\"chart-wrapper\">\r\n                                    <Line data={makeSparkLineData(1, brandDanger)} options={sparklineChartOpts}\r\n                                        width={100} height={30} />\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardHeader>\r\n\r\n\r\n                <CardBody>\r\n                    <ToolkitProvider\r\n                        keyField=\"id\"\r\n                        data={data}\r\n                        columns={columns}\r\n                        search\r\n\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <div style={{ paddingTop: 10, paddingBottom: 10, float: 'right' }}>\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        <Search.SearchBar {...props.searchProps} />\r\n                                    </div>\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                        hover\r\n                                        condensed\r\n                                        striped\r\n                                        bordered={false}\r\n                                        pagination={paginationFactory()}\r\n                                        noDataIndication={Loader}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </ToolkitProvider>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}